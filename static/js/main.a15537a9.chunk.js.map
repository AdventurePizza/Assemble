{"version":3,"sources":["firebaseContext.tsx","components/profile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","setModule","Promise","resolve","isSuccessful","getModules","getObjkts","getGoogleImages","getSpotify","fetchBase","FirebaseProvider","children","useCallback","address","module","value","key","a","fetch","method","headers","body","JSON","stringify","fetchRes","ok","message","statusText","json","query","Provider","Profile","account","enqueueSnackbar","useSnackbar","useContext","useState","slice","username","setUsername","isMobile","window","innerWidth","editMode","setEditMode","selectedEditField","setSelectedEditField","inputLabels","input","setInput","twitter","setTwitter","tumblr","setTumblr","github","setGithub","alias","setAlias","ethereum","setEthereum","createdObjkts","setCreatedObjkts","ownedObjkts","setOwnedObjkts","websites","setWebsites","images","setImages","googleInput","setGoogleInput","googleImages","setGoogleImages","songs","setSongs","wallets","setWallets","changeProfile","uuid","concat","type","useEffect","modules","tempWebsites","tempImages","tempWallets","forEach","push","console","log","tempCreatedCollections","tempOwnedCollections","i","length","results","objkts","created","token","wallet","owned","token_holder","fetchModules","variables","then","res","result","data","reverseRecord","domain","name","getDomain","fetchGraphQL","operationsDoc","operationName","indexer","ress","addr","query_profile","errors","error","tzprofiles_by_pk","fetchTezosProfiles","fetchSongs","googleSearch","imageDataWanted","map","url","alt","origin","title","imageLink","thumbnailLink","id","className","Avatar","src","style","width","height","Button","onClick","navigator","clipboard","writeText","open","variant","marginBottom","color","display","flexWrap","marginInline","marginBlock","overflow","Card","elevation","textAlign","index","marginTop","fontSize","HashToURL","display_uri","supply","lowest_ask","marginLeft","highest_offer","objkt","dataSource","sourceType","screenName","options","descriptionLength","imageHeight","showLoader","justifyContent","alignItems","song","timestamp","frameBorder","allow","size","Select","onChange","event","target","MenuItem","TextField","label","InputLabelProps","shrink","onKeyPress","overflowY","IconButton","findIndex","el","hash","replace","subdomain","ipfsClient","CID","toV1","toBaseEncodedString","err","dAppClient","DAppClient","App","navigate","useNavigate","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","setAddress","getActiveAccount","clearActiveAccount","sync","requestPermissions","permissions","URL","location","href","searchParams","get","profileAddress","includes","getAddress","getAcc","margin","fontFamily","position","unsync","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.a15537a9.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\nexport interface IFirebaseContext {\n  setModule: (address, module, value, key) => Promise<IFetchResponseBase>;\n  getModules: (address) => Promise<IFetchResponseBase>;\n  getObjkts: (address) => Promise<IFetchResponseBase>;\n  getGoogleImages: (query) => Promise<IFetchResponseBase>;\n  getSpotify: (address) => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  setModule: () => Promise.resolve({ isSuccessful: false }),\n  getModules: () => Promise.resolve({ isSuccessful: false }),\n  getObjkts: () => Promise.resolve({ isSuccessful: false }),\n  getGoogleImages: () => Promise.resolve({ isSuccessful: false }),\n  getSpotify: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://assemble-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n\n  const setModule = useCallback(\n    async (address, module, value, key): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/module`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ address: address, module: module, value: value, key: key }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getModules =\n    useCallback(async (address): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/modules/${address}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n\n  const getObjkts =\n    useCallback(async (address): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/objkts/${address}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const getGoogleImages =\n    useCallback(async (query): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/search/${query}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const getSpotify =\n    useCallback(async (address): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/spotify/${address}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        setModule,\n        getModules,\n        getObjkts,\n        getGoogleImages,\n        getSpotify\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","// @ts-nocheck\nimport React, { useEffect, useState, useContext } from 'react'\nimport { Button, Avatar, Card, Select, MenuItem, TextField, IconButton } from \"@material-ui/core\";\nimport \"./profile.css\";\nimport { useSnackbar } from \"notistack\";\nimport { Timeline } from 'react-twitter-widgets'\nimport { FirebaseContext } from \"../firebaseContext\";\nimport { LinkPreview } from '@dhaiwat10/react-link-preview';\nimport { UserCard } from 'react-github-cards/dist/medium'\nimport 'react-github-cards/dist/medium.css';\nimport { uuid } from 'uuidv4';\n\nexport const Profile = (\n    { address, account }\n) => {\n    const { enqueueSnackbar } = useSnackbar();\n    const { getModules, setModule, getObjkts, getGoogleImages, getSpotify } = useContext(FirebaseContext);\n    const [username, setUsername] = useState(address.slice(0, 6) + \"...\" + address.slice(32, 36));\n    const isMobile = window.innerWidth <= 500;\n    const [editMode, setEditMode] = useState(false);\n    const [selectedEditField, setSelectedEditField] = React.useState(\"twitter\");\n    const inputLabels = {\n        \"twitter\": \"adventurecorpp\",\n        \"tumblr\": \"tezos\",\n        \"github\": \"tanerdurmaz\",\n        \"alias\": \"nickname\",\n        \"ethereum wallet\": \"0x4bA9285EDE9D46Bc367ee1d5cD5a8F1d9e6572e6\",\n        \"website\": \"https://adventurenetworks.net/\",\n        \"image\": \"https://picsum.photos/300\"\n    };\n    const [input, setInput] = useState();\n\n    //profile modules\n    const [twitter, setTwitter] = useState();\n    const [tumblr, setTumblr] = useState();\n    const [github, setGithub] = useState();\n    const [alias, setAlias] = useState();\n    const [ethereum, setEthereum] = useState();\n    const [createdObjkts, setCreatedObjkts] = useState();\n    const [ownedObjkts, setOwnedObjkts] = useState();\n    const [websites, setWebsites] = useState();\n    const [images, setImages] = useState();\n    const [googleInput, setGoogleInput] = useState();\n    const [googleImages, setGoogleImages] = useState();\n    const [songs, setSongs] = useState();\n    const [wallets, setWallets] = useState();\n\n    useEffect(() => {\n        async function fetchModules() {\n            let modules = await getModules(address);\n            let tempWebsites = [];\n            let tempImages = [];\n            let tempWallets = [{ key: \"user wallet\", type: \"wallet\", value: address }];\n            if (modules) {\n                modules.forEach(module => {\n                    if (module.type === \"twitter\") {\n                        setTwitter(module.value);\n                    } else if (module.type === \"tumblr\") {\n                        setTumblr(module.value);\n                    } else if (module.type === \"github\") {\n                        setGithub(module.value);\n                    }\n                    else if (module.type === \"alias\") {\n                        setAlias(module.value);\n                    }\n                    else if (module.type === \"ethereum\") {\n                        setEthereum(module.value);\n                    }\n                    else if (module.type === \"website\") {\n                        tempWebsites.push(module)\n                    }\n                    else if (module.type === \"image\") {\n                        tempImages.push(module)\n                    }\n                    else if (module.type === \"wallet\") {\n                        tempWallets.push(module)\n                    }\n                    setWebsites(tempWebsites);\n                    setImages(tempImages);\n                    setWallets(tempWallets);\n                    console.log(tempWallets)\n                });\n            }\n\n            let tempCreatedCollections = [];\n            let tempOwnedCollections = [];\n            if (tempWallets) {\n                for (let i = 0; i < tempWallets.length; i++) {\n                    if (tempWallets[i].value) {\n                        let results = await getObjkts(tempWallets[i].value);\n                        tempCreatedCollections.push({ objkts: results.created.token, wallet: tempWallets[i].value })\n                        tempOwnedCollections.push({ objkts: results.owned.token_holder, wallet: tempWallets[i].value })\n                    }\n                }\n                setCreatedObjkts(tempCreatedCollections)\n                setOwnedObjkts(tempOwnedCollections)\n            }\n        }\n\n        fetchModules();\n    }, [getModules, setModule, address, getObjkts]);\n\n    function changeProfile() {\n        //set\n        //notify\n        if (selectedEditField === \"twitter\") {\n            setModule(address, \"twitter\", input);\n            setTwitter(input);\n        } else if (selectedEditField === \"tumblr\") {\n            setModule(address, \"tumblr\", input);\n            setTumblr(input);\n        } else if (selectedEditField === \"github\") {\n            setModule(address, \"github\", input);\n            setGithub(input);\n        } else if (selectedEditField === \"alias\") {\n            setModule(address, \"alias\", input);\n            setAlias(input);\n        } else if (selectedEditField === \"ethereum\") {\n            setModule(address, \"ethereum\", input);\n            setEthereum(input);\n        } else if (selectedEditField === \"website\") {\n            let key = uuid();\n            setModule(address, \"website\", input, key);\n            setWebsites((websites) => websites.concat({ value: input, key: key, type: \"website\" }));\n        } else if (selectedEditField === \"image\") {\n            let key = uuid();\n            setModule(address, \"image\", input, key);\n            setImages((images) => images.concat({ value: input, key: key, type: \"image\" }));\n        } else if (selectedEditField === \"wallet\") {\n            let key = uuid();\n            setModule(address, \"wallet\", input, key);\n            setWallets((wallets) => wallets.concat({ value: input, key: key, type: \"wallet\" }));\n        }\n    }\n\n    const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInput(event.target.value)\n    };\n\n    const handleKeyPress = (event) => {\n        if (event.key === \"Enter\") {\n            changeProfile()\n        }\n    };\n\n    const handleChangeInputGoogle = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setGoogleInput(event.target.value)\n    };\n\n    const handleKeyPressGoogle = (event) => {\n        if (event.key === \"Enter\") {\n            googleSearch();\n        }\n    };\n    const handleChange = (event: SelectChangeEvent) => {\n        setSelectedEditField(event.target.value as string);\n\n        if (event.target.value === \"twitter\" && twitter) {\n            setInput(twitter)\n        } else if (event.target.value === \"tumblr\" && tumblr) {\n            setInput(tumblr)\n        } else if (event.target.value === \"github\" && github) {\n            setInput(github)\n        } else if (event.target.value === \"alias\" && alias) {\n            setInput(alias)\n        } else if (event.target.value === \"ethereum\" && ethereum) {\n            setInput(ethereum)\n        } else {\n            setInput(inputLabels[event.target.value])\n        }\n    };\n\n    useEffect(() => {\n        //get wallet names for ex. taner.tez\n        async function getDomain(address: string) {\n            let domain;\n            await fetch('https://api.tezos.domains/graphql', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query: `\n            {\n              reverseRecord(address: \"`+ address + `\"){owner domain{name}}\n            }\n            `,\n                    variables: {\n                    },\n                }\n                ),\n            })\n                .then((res) => res.json())\n                .then((result) => {\n                    console.log(result);\n                    if (result.data.reverseRecord) {\n                        domain = result.data.reverseRecord.domain.name;\n                        setUsername(domain);\n                    }\n                });\n        }\n        getDomain(address)\n    }, [address]);\n\n    useEffect(() => {\n        async function fetchGraphQL(operationsDoc, operationName, variables, indexer) {\n            let result = await fetch(indexer, {\n                method: 'POST',\n                body: JSON.stringify({\n                    query: operationsDoc,\n                    variables: variables,\n                    operationName: operationName,\n                }),\n            })\n\n            var ress = await result.json();\n            return ress;\n        }\n\n        async function fetchTezosProfiles(addr) {\n\n            const { errors, data } = await fetchGraphQL(\n                query_profile,\n                'TezosProfiles',\n                { address: addr },\n                'https://indexer.tzprofiles.com/v1/graphql'\n            )\n            if (errors) {\n                console.error(errors)\n            }\n            if (data) {\n                console.log(data);\n\n                if (data.tzprofiles_by_pk) {\n                    if (!twitter && data.tzprofiles_by_pk.twitter) {\n                        setTwitter(data.tzprofiles_by_pk.twitter);\n                    }\n                    if (!github && data.tzprofiles_by_pk.github) {\n                        setGithub(data.tzprofiles_by_pk.github)\n                    }\n                    if (!alias && data.tzprofiles_by_pk.alias) {\n                        setAlias(data.tzprofiles_by_pk.alias)\n                    }\n                    if (!ethereum && data.tzprofiles_by_pk.ethereum) {\n                        setEthereum(data.tzprofiles_by_pk.ethereum)\n                    }\n                }\n            }\n        }\n        fetchTezosProfiles(address)\n\n    }, [address, alias, ethereum, github, twitter,]);\n\n\n    useEffect(() => {\n\n        async function fetchSongs(address) {\n            setSongs(await getSpotify(address))\n        }\n        fetchSongs(address);\n\n    }, [address, getSpotify]);\n\n    const googleSearch = async () => {\n        console.log(googleInput)\n\n        //setLoading(true);\n        const res = await getGoogleImages(googleInput);\n\n        const imageDataWanted = res.map(\n            ({ url, origin }: IResponseDataGoogle) => {\n                const { title } = origin;\n                return {\n                    alt: title,\n                    imageLink: url,\n                    thumbnailLink: url,\n                    id: url\n                };\n            }\n        );\n        console.log(imageDataWanted)\n        //setLoading(false);\n        setGoogleImages(imageDataWanted);\n\n    }\n\n    return (\n        <div >\n            <div className=\"center\">\n                <Avatar\n                    alt=\"Profile Picture\"\n                    src={`https://services.tzkt.io/v1/avatars/${address}`}\n                    style={{ width: 150, height: 150 }}\n                />\n            </div>\n            <div className=\"center\">\n                <b>{alias}</b>\n            </div>\n            <div className=\"center\">\n                <Button\n                    onClick={() => {\n                        navigator.clipboard.writeText(address);\n                        enqueueSnackbar(\n                            <div onClick={() => {\n                                window.open(`https://tzkt.io/${address}/operations`);\n                            }}\n                            > Wallet address coppied, click to view on explorer </div>, {\n                            variant: \"success\",\n                        });\n                    }}\n                >{username}</Button>\n            </div>\n            {account && account.address === address &&\n                <div className=\"center\" style={{ marginBottom: 20 }}>\n                    <Button\n                        variant=\"contained\" color=\"primary\"\n                        onClick={() => { setEditMode(!editMode) }}\n                    >\n                        {editMode ? \"finish edit\" : \"edit\"}\n                    </Button>\n\n                </div>\n            }\n\n            {!editMode &&\n                <div className=\"modules\" style={{ display: isMobile ? \"grid\" : \"flex\", width: \"100vw\", flexWrap: \"wrap\" }}>\n\n\n                    {createdObjkts && createdObjkts.map(({ objkts, wallet }) => (\n                        <div style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\", height: 600, overflow: \"scroll\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <div style={{ textAlign: \"center\" }}> <h3>Created Objkts</h3></div>\n                                <div style={{ textAlign: \"center\" }}> <h3>{wallet}</h3></div>\n\n                                {objkts && objkts.map((token, index) => (\n                                    <div style={{ marginTop: 15 }}>\n                                        <Card variant=\"elevation\" elevation={24}>\n                                            <div style={{ textAlign: \"center\", fontSize: \"1.1em\" }}> <b>{token.name}</b></div>\n                                            <img src={HashToURL(token.display_uri, 'IPFS')} alt={token.name} width=\"100%\" />\n                                            <div style={{ textAlign: \"center\" }}> <b>{token.supply} X </b></div>\n                                            <div style={{ display: \"flex\" }}>\n                                                <div>\n                                                    <b>\n                                                        price: {token.lowest_ask ? ((token.lowest_ask / 1000000) + \"ꜩ\") : \"-\"}\n                                                    </b>\n                                                </div>\n                                                <div style={{ marginLeft: \"auto\" }}>\n                                                    <b>\n                                                        offer: {token.highest_offer ? ((token.highest_offer / 1000000) + \"ꜩ\") : \"-\"}\n                                                    </b>\n                                                </div>\n                                            </div>\n                                        </Card>\n                                    </div>\n                                ))}\n                            </Card>\n                        </div>\n                    ))\n                    }\n                    {ownedObjkts && ownedObjkts.map(({ objkts, wallet }) => (\n                        <div style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\", height: 600, overflow: \"scroll\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <div style={{ textAlign: \"center\" }}> <h3>Owned Objkts</h3></div>\n                                <div style={{ textAlign: \"center\" }}> <h3>{wallet}</h3></div>\n\n                                {objkts && objkts.map((objkt) => (\n                                    <div style={{ marginTop: 15 }}>\n                                        <Card variant=\"elevation\" elevation={24}>\n                                            <div style={{ textAlign: \"center\", fontSize: \"1.1em\" }}> <b>{objkt.token.name}</b></div>\n                                            <img src={HashToURL(objkt.token.display_uri, 'IPFS')} alt={objkt.token.name} width=\"100%\" />\n                                            <div style={{ textAlign: \"center\" }}> <b>{objkt.token.supply} X </b></div>\n                                            <div style={{ display: \"flex\" }}>\n                                                <div>\n                                                    <b>\n                                                        price: {objkt.token.lowest_ask ? ((objkt.token.lowest_ask / 1000000) + \"ꜩ\") : \"-\"}\n                                                    </b>\n                                                </div>\n                                                <div style={{ marginLeft: \"auto\" }}>\n                                                    <b>\n                                                        offer: {objkt.token.highest_offer ? ((objkt.token.highest_offer / 1000000) + \"ꜩ\") : \"-\"}\n                                                    </b>\n                                                </div>\n                                            </div>\n                                        </Card>\n                                    </div>\n                                ))}\n                            </Card>\n                        </div>\n                    ))\n                    }\n                    {twitter &&\n                        <div className=\"twitter\" style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <Timeline\n                                    dataSource={{\n                                        sourceType: 'profile',\n                                        screenName: twitter\n                                    }}\n                                    options={{\n                                        width: '100%',\n                                        height: '600'\n                                    }}\n                                />\n                            </Card>\n                        </div>\n                    }\n\n                    {tumblr &&\n                        <div className=\"tumblr\" style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe title={\"tumblr\"} src={`https://${tumblr}.tumblr.com/`} width={\"100%\"} height={600}></iframe>\n                            </Card>\n                        </div>\n                    }\n\n\n\n                    {ethereum &&\n                        <div style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe src={`https://opensea.io/${ethereum}?embed=true`}\n                                    title=\"opensea\"\n                                    width='100%'\n                                    height='600'\n                                ></iframe>\n                            </Card>\n                        </div>\n                    }\n\n                    {websites && websites.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n\n                            <Card variant=\"elevation\" elevation={24}>\n                                <LinkPreview\n                                    url={value}\n                                    //fallback={noLinkPrev}\n                                    descriptionLength={50}\n                                    imageHeight={300}\n                                    showLoader={true}\n                                />\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {images && images.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <img src={value} alt={value} width=\"100%\" />\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {github &&\n                        <div className=\"github\" style={{ width: isMobile ? \"84%\" : \"20%\", height: 260, marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20 }}>\n                            <div style={{ justifyContent: \"center\", alignItems: \"center\", width: \"100%\", display: \"flex\" }}>\n                                <Card variant=\"elevation\" elevation={24}>\n                                    <UserCard username={github} />\n                                </Card>\n                            </div>\n                        </div>\n                    }\n\n\n                    {songs && songs.map(({ song, username, timestamp }) => (\n                        <div key={timestamp} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe\n                                    title={timestamp}\n                                    src={`https://open.spotify.com/embed/${song.type}/${song.id}?utm_source=generator`}\n                                    width=\"100%\"\n                                    height=\"152\"\n                                    frameBorder=\"0\"\n\n                                    allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n                                ></iframe>\n                                <div style={{ textAlign: \"center\" }} >\n                                    <Button\n                                        title={timestamp}\n                                        size={\"small\"}\n                                    >\n                                        {username}{\" \"}\n                                    </Button>{\" \"}\n                                </div>\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                </div>\n            }\n\n            {editMode &&\n                <div style={{ marginTop: 30 }}>\n                    <div className=\"center\">\n                        <Select\n                            variant=\"outlined\"\n                            value={selectedEditField}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={\"wallet\"}>+Wallet</MenuItem>\n                            <MenuItem value={\"twitter\"}>Twitter</MenuItem>\n                            <MenuItem value={\"tumblr\"}>Tumblr</MenuItem>\n                            <MenuItem value={\"github\"}>Github</MenuItem>\n                            <MenuItem value={\"alias\"}>Alias</MenuItem>\n                            <MenuItem value={\"ethereum\"}>Ethereum</MenuItem>\n                            <MenuItem value={\"website\"}>+Website</MenuItem>\n                            <MenuItem value={\"image\"}>+Image</MenuItem>\n                        </Select>\n\n                        <TextField id=\"outlined-basic\" label={inputLabels[selectedEditField]} variant=\"outlined\"\n                            InputLabelProps={{ shrink: true }}\n                            onChange={handleChangeInput}\n                            value={input}\n                            onKeyPress={handleKeyPress}\n                        />\n\n                        <Button\n                            variant=\"contained\" color=\"primary\"\n                            style={{ marginLeft: 10 }}\n                            onClick={() => { changeProfile() }}\n                        >\n                            Post\n                        </Button>\n                    </div>\n\n                    {selectedEditField === \"image\" &&\n                        <div className=\"center\" style={{ marginTop: 20 }}>\n\n                            <TextField id=\"outlined-basic\" label={\"Google Search\"} variant=\"outlined\"\n                                onChange={handleChangeInputGoogle}\n                                value={googleInput}\n                                onKeyPress={handleKeyPressGoogle}\n                            />\n                            <Button\n                                variant=\"contained\" color=\"primary\"\n                                style={{ marginLeft: 10 }}\n                                onClick={() => { googleSearch() }}\n                            >\n                                Search\n                            </Button>\n                        </div>\n                    }\n\n                    <br></br>\n                    <br></br>\n                    <div className=\"background-container\" style={{ overflowY: 'auto' }}>\n                        <div className=\"background-icon-list\" >\n                            {googleImages &&\n                                googleImages.map(({ alt, thumbnailLink, imageLink, id }) => (\n                                    <IconButton\n                                        key={id}\n                                        onClick={() =>\n                                            //sendImage(imageLink, isSwitchChecked ? 'background' : 'image')\n                                            //<img src={thumbnailLink} alt={alt} width={\"200\"} />\n                                            // setImage({ alt, thumbnailLink, imageLink, id })\n                                            setInput(imageLink)\n                                        }\n\n                                    >\n                                        <Avatar variant=\"rounded\" src={thumbnailLink} alt={alt} style={{ width: 100, height: 100 }} />\n                                    </IconButton>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"center\" style={{ marginTop: 25 }}><b>auto preview</b> </div>\n                    <div className=\"center\" style={{ marginTop: 5 }}>\n                        {selectedEditField === \"twitter\" &&\n                            <div className=\"twitter\" style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20 }}>\n                                <Card variant=\"outlined\">\n                                    <Timeline\n                                        dataSource={{\n                                            sourceType: 'profile',\n                                            screenName: input\n                                        }}\n                                        options={{\n                                            width: '400',\n                                            height: '600'\n                                        }}\n                                    />\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"tumblr\" &&\n                            <div className=\"tumblr\" >\n                                <Card variant=\"elevation\" elevation={24}>\n                                    <iframe title={\"tumblr\"} src={`https://${input}.tumblr.com/`} width={400} height={600}></iframe>\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"github\" &&\n                            <div className=\"github\" style={{ height: 260, marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20 }}>\n                                <Card variant=\"elevation\" elevation={24}>\n                                    <UserCard key={input} username={input} />\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"alias\" &&\n                            <div style={{ marginTop: 25 }}>\n                                <b>{alias}</b>\n                            </div>\n                        }\n                        {selectedEditField === \"ethereum\" && input &&\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe src={`https://opensea.io/${input}?embed=true`}\n                                    title=\"opensea\"\n                                    width='400'\n                                    height='600'\n\n                                ></iframe>\n                            </Card>\n                        }\n                        {selectedEditField === \"website\" &&\n                            <Card variant=\"elevation\" elevation={24}>\n                                <LinkPreview\n\n                                    url={input}\n                                    //fallback={noLinkPrev}\n                                    descriptionLength={50}\n                                    imageHeight={300}\n                                    showLoader={true}\n                                />\n                            </Card>\n                        }\n                        {selectedEditField === \"image\" &&\n                            <Card variant=\"elevation\" elevation={24}>\n                                <img src={input} alt={input} width=\"100%\" />\n                            </Card>\n                        }\n                    </div>\n                    <div className=\"center\" style={{ marginTop: 25 }}><b>Links</b> </div>\n\n                    <div className=\"center\" style={{ marginTop: 25, fontSize: isMobile ? \"0.5em\" : \"1em\" }}>\n                        <table style={{ width: 400 }}>\n\n                            {wallets && wallets.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Wallet</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"wallet\", \"\", key);\n                                                let index = wallets.findIndex((el) => el.key === key)\n\n                                                setWallets([\n                                                    ...wallets.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...wallets.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {twitter && <tr>\n                                <td >Twitter</td>\n                                <td>{twitter}</td>\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"twitter\", \"\");\n                                            setTwitter(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>\n                            }\n                            {tumblr && <tr>\n                                <td >Tumblr</td>\n                                <td>{tumblr}</td>\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"tumblr\", \"\");\n                                            setTumblr(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>\n                            }\n                            {github && <tr>\n                                <td >Github</td>\n                                <td>{github}</td>\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"github\", \"\");\n                                            setGithub(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>}\n                            {alias && <tr>\n                                <td >Alias</td>\n                                <td>{alias}</td>\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"alias\", \"\");\n                                            setAlias(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>}\n                            {ethereum && <tr>\n                                <td >Ethereum</td>\n                                <td>{ethereum.slice(0, 16) + \"...\" + ethereum.slice(32, 63)}</td>\n\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"ethereum\", \"\");\n                                            setEthereum(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>}\n\n                            {websites && websites.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Website</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"website\", \"\", key);\n                                                let index = websites.findIndex((el) => el.key === key)\n\n                                                setWebsites([\n                                                    ...websites.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...websites.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {images && images.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Image</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"image\", \"\", key);\n                                                let index = images.findIndex((el) => el.key === key)\n\n                                                setImages([\n                                                    ...images.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...images.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                        </table>\n\n                    </div>\n\n                </div>\n            }\n        </div >\n    );\n\n};\n\nconst query_profile = `\nquery TezosProfiles($address: String!){ \n    tzprofiles_by_pk(account: $address) \n    { \n      account,\n      discord,\n      twitter,\n      github,\n      ethereum,\n      domain_name,\n      logo,\n  alias,\n      website,\n      description,\n          valid_claims,\n  \n    } \n  }\n`\n\n\nconst HashToURL = (hash, type) => {\n    // when on preview the hash might be undefined.\n    // its safe to return empty string as whatever called HashToURL is not going to be used\n    // artifactUri or displayUri\n    if (hash) {\n        switch (type) {\n            case 'HIC':\n                return hash.replace('ipfs://', 'https://pinata.hicetnunc.xyz/ipfs/')\n            case 'CLOUDFLARE':\n                return hash.replace('ipfs://', 'https://cloudflare-ipfs.com/ipfs/')\n            case 'PINATA':\n                return hash.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/')\n            case 'IPFS':\n                return hash.replace('ipfs://', 'https://ipfs.io/ipfs/')\n            case 'INFURA':\n                try {\n                    var cidv1 = new ipfsClient.CID(hash.replace('ipfs://', '')).toV1()\n                    var subdomain = cidv1.toBaseEncodedString('base32')\n                    return `https://${subdomain}.ipfs.infura-ipfs.io/`\n                } catch (err) {\n                    return undefined\n                }\n            case 'DWEB':\n                return hash.replace('ipfs://', 'http://dweb.link/ipfs/')\n            default:\n                console.error('please specify type')\n                return hash\n        }\n    }\n}","// @ts-nocheck\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\n\n//ui\nimport { Button } from \"@material-ui/core\";\n\n//logic\nimport { DAppClient } from \"@airgap/beacon-sdk\";\n//import _ from \"underscore\";\n//import { FirebaseContext } from \"./firebaseContext\";\nimport { Profile } from './components/profile';\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\n\n\nfunction App() {\n  const navigate = useNavigate();\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n  const [address, setAddress] = useState();\n\n\n\n  useEffect(() => {\n    async function getAddress() {\n      console.log(new URL(window.location.href).searchParams.get('profile'))\n      let profileAddress = new URL(window.location.href).searchParams.get('profile');\n      //setAddress(profileAddress);\n\n      if (!(profileAddress && profileAddress.includes(\".tez\"))) {\n        setAddress(profileAddress);\n      }\n      else if (profileAddress) {\n\n        await fetch('https://api.tezos.domains/graphql', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            query: `\n                {\n                  domain(name: \"` + profileAddress + `\") {\n                    name\n                    address\n                  }\n                }\n                `,\n            variables: {\n            },\n          }\n          ),\n        })\n          .then((res) => res.json())\n          .then((result) => {\n            console.log(result);\n            if (result.data.domain) {\n              setAddress(result.data.domain.address);\n            }\n          });\n      }\n    }\n    getAddress();\n  }, [setAddress]);\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n        if (!address) {\n          navigate(\"/Assemble?profile=\" + activeAccount.address);\n        }\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n      if (!address) {\n        navigate(\"/Assemble?profile=\" + activeAccount.address);\n      }\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n        navigate(\"/Assemble?profile=\" + permissions.address);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          margin: 6,\n          fontFamily: \"BodoniModa\",\n        }}\n      >\n        <b>Profile Assemblr </b>\n      </div>\n\n      {!showUnsync &&\n        <div>\n\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            welcome sync and explore\n          </div>\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            profile search module\n          </div>\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            display random profile\n          </div>\n        </div>\n      }\n      {\n        (address || activeAccount) &&\n        <Profile\n          key={activeAccount + address}\n          address={address ? address : activeAccount.address}\n          account={activeAccount}\n        />\n      }\n\n      <div\n        className=\"top-right\"\n        style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\" }}\n      >\n        {showUnsync && (\n          <Button\n            size={\"small\"}\n            title={\"unsync\"}\n            onClick={() => {\n              unsync();\n            }}\n          >\n            <u>unsync</u>{\" \"}\n          </Button>\n        )}\n\n        {showUnsync && <div> | </div>}\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            if (!showUnsync) {\n              await sync();\n            } else {\n              navigate(\"/Assemble?profile=\" + activeAccount.address);\n              setAddress(activeAccount.address);\n            }\n          }}\n        >\n          <u>{synced}</u>{\" \"}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <FirebaseProvider>\n      <SnackbarProvider maxSnack={3}>\n        <App />\n      </SnackbarProvider>\n    </FirebaseProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}