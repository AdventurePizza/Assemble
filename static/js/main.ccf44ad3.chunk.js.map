{"version":3,"sources":["firebaseContext.tsx","components/profile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","setModule","Promise","resolve","isSuccessful","getModules","fetchBase","FirebaseProvider","children","useCallback","address","module","value","a","fetch","method","headers","body","JSON","stringify","fetchRes","ok","message","statusText","json","Provider","Profile","account","enqueueSnackbar","useSnackbar","useContext","useState","slice","username","setUsername","isMobile","window","innerWidth","editMode","setEditMode","selectedEditField","setSelectedEditField","inputLabels","input","setInput","twitter","setTwitter","tumblr","setTumblr","github","setGithub","alias","setAlias","ethereum","setEthereum","createdObjkts","setCreatedObjkts","changeProfile","useEffect","forEach","type","fetchModules","query","variables","then","res","result","console","log","data","reverseRecord","domain","name","getDomain","fetchGraphQL","operationsDoc","operationName","indexer","ress","addr","query_profile","errors","error","tzprofiles_by_pk","query_objkts_created","token","fetchTezosProfiles","fetchCreatedObjkts","className","Avatar","alt","src","style","width","height","Button","onClick","navigator","clipboard","writeText","open","variant","marginBottom","color","display","flexWrap","marginInline","marginBlock","Card","dataSource","sourceType","screenName","options","title","overflow","textAlign","map","index","marginTop","fontSize","HashToURL","display_uri","supply","lowest_ask","marginLeft","highest_bid","Select","onChange","event","target","MenuItem","TextField","id","label","onKeyPress","key","hash","undefined","replace","subdomain","ipfsClient","CID","toV1","toBaseEncodedString","err","dAppClient","DAppClient","App","navigate","useNavigate","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","setAddress","getActiveAccount","clearActiveAccount","sync","requestPermissions","permissions","URL","location","href","searchParams","get","profileAddress","includes","getAddress","getAcc","alignItems","margin","position","size","unsync","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.ccf44ad3.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\nexport interface IFirebaseContext {\n  setModule: (address, module, value) => Promise<IFetchResponseBase>;\n  getModules: (address) => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  setModule: () => Promise.resolve({ isSuccessful: false }),\n  getModules: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://assemble-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n\n  const setModule = useCallback(\n    async (address, module, value): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/module`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ address: address, module: module, value: value }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getModules =\n    useCallback(async (address): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/modules/${address}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        setModule,\n        getModules,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","// @ts-nocheck\nimport React, { useEffect, useState, useContext } from 'react'\nimport { Button, Avatar, Card, Select, MenuItem, TextField } from \"@material-ui/core\";\nimport \"./profile.css\";\nimport { useSnackbar } from \"notistack\";\nimport { Timeline } from 'react-twitter-widgets'\nimport { FirebaseContext } from \"../firebaseContext\";\nimport { UserCard } from 'react-github-cards/dist/medium'\nimport 'react-github-cards/dist/medium.css';\n\nexport const Profile = (\n    { address, account }\n) => {\n    const { enqueueSnackbar } = useSnackbar();\n    const { getModules, setModule } = useContext(FirebaseContext);\n    const [username, setUsername] = useState(address.slice(0, 6) + \"...\" + address.slice(32, 36));\n    const isMobile = window.innerWidth <= 500;\n    const [editMode, setEditMode] = useState(false);\n    const [selectedEditField, setSelectedEditField] = React.useState(\"twitter\");\n    const inputLabels = {\n        \"twitter\": \"adventurecorpp\",\n        \"tumblr\": \"tezos\",\n        \"github\": \"tanerdurmaz\",\n        \"alias\": \"nickname\",\n        \"ethereum wallet\": \"0x4bA9285EDE9D46Bc367ee1d5cD5a8F1d9e6572e6\",\n    };\n    const [input, setInput] = useState();\n\n    //profile modules\n    const [twitter, setTwitter] = useState();\n    const [tumblr, setTumblr] = useState();\n    const [github, setGithub] = useState();\n    const [alias, setAlias] = useState();\n    const [ethereum, setEthereum] = useState();\n    const [createdObjkts, setCreatedObjkts] = useState();\n\n    useEffect(() => {\n        async function fetchModules() {\n            let modules = await getModules(address);\n            modules.forEach(module => {\n                if (module.type === \"twitter\") {\n                    setTwitter(module.value);\n                } else if (module.type === \"tumblr\") {\n                    setTumblr(module.value);\n                } else if (module.type === \"github\") {\n                    setGithub(module.value);\n                }\n                else if (module.type === \"alias\") {\n                    setAlias(module.value);\n                }\n                else if (module.type === \"ethereum\") {\n                    setEthereum(module.value);\n                }\n            });\n        }\n\n        fetchModules();\n    }, [getModules, setModule, address]);\n\n    function changeProfile() {\n        //set\n        //notify\n        if (selectedEditField === \"twitter\") {\n            setModule(address, \"twitter\", input);\n            setTwitter(input);\n        } else if (selectedEditField === \"tumblr\") {\n            setModule(address, \"tumblr\", input);\n            setTumblr(input);\n        } else if (selectedEditField === \"github\") {\n            setModule(address, \"github\", input);\n            setGithub(input);\n        } else if (selectedEditField === \"alias\") {\n            setModule(address, \"alias\", input);\n            setAlias(input);\n        } else if (selectedEditField === \"ethereum\") {\n            setModule(address, \"ethereum\", input);\n            setEthereum(input);\n        }\n    }\n\n    const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInput(event.target.value)\n    };\n\n    const handleKeyPress = (event) => {\n        if (event.key === \"Enter\") {\n            changeProfile()\n        }\n    };\n\n    const handleChange = (event: SelectChangeEvent) => {\n        setSelectedEditField(event.target.value as string);\n\n        if (event.target.value === \"twitter\" && twitter) {\n            setInput(twitter)\n        } else if (event.target.value === \"tumblr\" && tumblr) {\n            setInput(tumblr)\n        } else if (event.target.value === \"github\" && github) {\n            setInput(github)\n        } else if (event.target.value === \"alias\" && alias) {\n            setInput(alias)\n        } else if (event.target.value === \"ethereum\" && alias) {\n            setInput(ethereum)\n        }\n        else {\n            setInput(inputLabels[event.target.value])\n        }\n    };\n\n    useEffect(() => {\n        //get wallet names for ex. taner.tez\n        async function getDomain(address: string) {\n            let domain;\n            await fetch('https://api.tezos.domains/graphql', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query: `\n            {\n              reverseRecord(address: \"`+ address + `\"){owner domain{name}}\n            }\n            `,\n                    variables: {\n                    },\n                }\n                ),\n            })\n                .then((res) => res.json())\n                .then((result) => {\n                    console.log(result);\n                    if (result.data.reverseRecord) {\n                        domain = result.data.reverseRecord.domain.name;\n                        setUsername(domain);\n                    }\n                });\n        }\n        getDomain(address)\n    }, [address]);\n\n    useEffect(() => {\n        async function fetchGraphQL(operationsDoc, operationName, variables, indexer) {\n            let result = await fetch(indexer, {\n                method: 'POST',\n                body: JSON.stringify({\n                    query: operationsDoc,\n                    variables: variables,\n                    operationName: operationName,\n                }),\n            })\n\n            var ress = await result.json();\n            return ress;\n        }\n\n        async function fetchTezosProfiles(addr) {\n\n            const { errors, data } = await fetchGraphQL(\n                query_profile,\n                'TezosProfiles',\n                { address: addr },\n                'https://indexer.tzprofiles.com/v1/graphql'\n            )\n            if (errors) {\n                console.error(errors)\n            }\n            if (data) {\n                console.log(data);\n\n                if (data.tzprofiles_by_pk) {\n                    if (!twitter && data.tzprofiles_by_pk.twitter) {\n                        setTwitter(data.tzprofiles_by_pk.twitter);\n                    }\n                    if (!github && data.tzprofiles_by_pk.github) {\n                        setGithub(data.tzprofiles_by_pk.github)\n                    }\n                    if (!alias && data.tzprofiles_by_pk.alias) {\n                        setAlias(data.tzprofiles_by_pk.alias)\n                    }\n                    if (!ethereum && data.tzprofiles_by_pk.ethereum) {\n                        setEthereum(data.tzprofiles_by_pk.ethereum)\n                    }\n                }\n            }\n        }\n        fetchTezosProfiles(address)\n\n        async function fetchCreatedObjkts(addr) {\n            console.log(\"aaaaaaa\");\n            const { errors, data } = await fetchGraphQL(\n                query_objkts_created,\n                'GetObjktsPaged',\n                {\n                    \"where\": {\n                        \"creator_id\": {\n                            \"_eq\": addr\n                        },\n                        \"fa2\": {\n                            \"live\": {\n                                \"_eq\": true\n                            }\n                        },\n                        \"fa2_id\": {},\n                        \"supply\": {\n                            \"_gt\": \"0\"\n                        },\n                        \"flag\": {\n                            \"_neq\": \"removed\"\n                        },\n                        \"artifact_uri\": {\n                            \"_neq\": \"\"\n                        },\n                        \"_or\": [\n                            {\n                                \"title\": {}\n                            },\n                            {\n                                \"creator_id\": {}\n                            },\n                            {\n                                \"creator\": {\n                                    \"alias\": {}\n                                }\n                            },\n                            {\n                                \"creator\": {\n                                    \"tzdomain\": {}\n                                }\n                            },\n                            {\n                                \"id\": {\n                                    \"_eq\": \"-1\"\n                                }\n                            }\n                        ]\n                    },\n                    \"order_by\": [\n                        {\n                            \"timestamp\": \"desc\"\n                        },\n                        {\n                            \"id\": \"desc\"\n                        }\n                    ],\n                    \"limit\": 24,\n                    \"offset\": 0\n                },\n                \"https://api.objkt.com/v1/graphql\"\n            )\n            if (errors) {\n                console.error(errors)\n            }\n            if (data) {\n                console.log(\"data\");\n                console.log(data);\n                setCreatedObjkts(data.token)\n\n            }\n        }\n        fetchCreatedObjkts(address)\n    }, [address]);\n\n\n\n    return (\n        <div >\n            <div className=\"center\">\n                <Avatar\n                    alt=\"Profile Picture\"\n                    src={`https://services.tzkt.io/v1/avatars/${address}`}\n                    style={{ width: 150, height: 150 }}\n                />\n            </div>\n            <div className=\"center\">\n                <b>{alias}</b>\n            </div>\n            <div className=\"center\">\n                <Button\n                    onClick={() => {\n                        navigator.clipboard.writeText(address);\n                        enqueueSnackbar(\n                            <div onClick={() => {\n                                window.open(`https://tzkt.io/${address}/operations`);\n                            }}\n                            > Wallet address coppied, click to view on explorer </div>, {\n                            variant: \"success\",\n                        });\n                    }}\n                >{username}</Button>\n            </div>\n            {account && account.address === address &&\n                <div className=\"center\" style={{ marginBottom: 10 }}>\n                    <Button\n                        variant=\"contained\" color=\"primary\"\n                        onClick={() => { setEditMode(!editMode) }}\n                    >\n                        {editMode ? \"finish edit\" : \"edit\"}\n                    </Button>\n\n                </div>\n            }\n\n            {!editMode &&\n                <div className=\"modules\" style={{ display: isMobile ? \"grid\" : \"flex\", width: \"100vw\", flexWrap: \"wrap\" }}>\n                    {twitter &&\n                        <div className=\"twitter\" style={{ marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0 }}>\n                            <Card variant=\"outlined\">\n                                <Timeline\n                                    dataSource={{\n                                        sourceType: 'profile',\n                                        screenName: twitter\n                                    }}\n                                    options={{\n                                        width: '400',\n                                        height: '600'\n                                    }}\n                                />\n                            </Card>\n                        </div>\n                    }\n\n                    {tumblr &&\n                        <div className=\"tumblr\" >\n                            <Card variant=\"outlined\" >\n                                <iframe title={\"tumblr\"} src={`https://${tumblr}.tumblr.com/`} width={400} height={600}></iframe>\n                            </Card>\n                        </div>\n                    }\n\n                    {github &&\n                        <div className=\"github\" style={{ height: 260, marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0 }}>\n                            <Card variant=\"outlined\" >\n                                <UserCard username={github} />\n                            </Card>\n                        </div>\n                    }\n\n                    {ethereum &&\n                        <Card variant=\"outlined\" >\n                            <iframe src={`https://opensea.io/${ethereum}?embed=true`}\n                                title=\"opensea\"\n                                width='400'\n                                height='600'\n                            ></iframe>\n                        </Card>\n\n                    }\n\n                    <div style={{ width: 400, height: 600, overflow: \"scroll\" }}>\n                        <Card variant=\"outlined\" >\n                            <div style={{ textAlign: \"center\" }}> <h2>Created Objkts</h2></div>\n\n                            {createdObjkts && createdObjkts.map((token, index) => (\n                                <div style={{ marginTop: 10 }}>\n                                    <Card variant=\"outlined\" >\n                                        <div style={{ textAlign: \"center\", fontSize: \"1.1em\" }}> <b>{token.title}</b></div>\n                                        <img src={HashToURL(token.display_uri, 'IPFS')} alt={token.title} width=\"100%\" />\n                                        <div style={{ textAlign: \"center\" }}> <b>{token.supply} X </b></div>\n                                        <div style={{ display: \"flex\" }}>\n                                            <div>\n                                                <b>\n                                                    price: {token.lowest_ask ? ((token.lowest_ask / 1000000) + \"ꜩ\") : \"-\"}\n                                                </b>\n                                            </div>\n                                            <div style={{ marginLeft: \"auto\" }}>\n                                                <b>\n                                                    offer: {token.highest_bid ? ((token.highest_bid / 1000000) + \"ꜩ\") : \"-\"}\n                                                </b>\n                                            </div>\n                                        </div>\n                                    </Card>\n                                </div>\n                            ))}\n                        </Card>\n\n                    </div>\n                </div>\n            }\n\n            {editMode &&\n                <div style={{ marginTop: 30 }}>\n                    <div className=\"center\">\n                        <Select\n                            variant=\"outlined\"\n                            value={selectedEditField}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={\"twitter\"}>Twitter</MenuItem>\n                            <MenuItem value={\"tumblr\"}>Tumblr</MenuItem>\n                            <MenuItem value={\"github\"}>Github</MenuItem>\n                            <MenuItem value={\"alias\"}>Alias</MenuItem>\n                            <MenuItem value={\"ethereum\"}>Ethereum</MenuItem>\n                        </Select>\n\n                        <TextField id=\"outlined-basic\" label={inputLabels[selectedEditField]} variant=\"outlined\"\n                            onChange={handleChangeInput}\n                            value={input}\n                            onKeyPress={handleKeyPress}\n                        />\n\n                        <Button\n                            variant=\"contained\" color=\"primary\"\n                            style={{ marginLeft: 10 }}\n                            onClick={() => { changeProfile() }}\n                        >\n                            Post\n                        </Button>\n                    </div>\n                    <div className=\"center\" style={{ marginTop: 25 }}><b>auto preview</b> </div>\n                    <div className=\"center\" style={{ marginTop: 5 }}>\n                        {selectedEditField === \"twitter\" &&\n                            <div className=\"twitter\" style={{ marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0 }}>\n                                <Card variant=\"outlined\">\n                                    <Timeline\n                                        dataSource={{\n                                            sourceType: 'profile',\n                                            screenName: input\n                                        }}\n                                        options={{\n                                            width: '400',\n                                            height: '600'\n                                        }}\n                                    />\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"tumblr\" &&\n                            <div className=\"tumblr\" >\n                                <Card variant=\"outlined\" >\n                                    <iframe title={\"tumblr\"} src={`https://${input}.tumblr.com/`} width={400} height={600}></iframe>\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"github\" &&\n                            <div className=\"github\" style={{ height: 260, marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0 }}>\n                                <Card variant=\"outlined\" >\n                                    <UserCard key={input} username={input} />\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"alias\" &&\n                            <div style={{ marginTop: 25 }}>\n                                <b>{alias}</b>\n                            </div>\n                        }\n                        {selectedEditField === \"ethereum\" && input &&\n                            <Card variant=\"outlined\" >\n                                <iframe src={`https://opensea.io/${input}?embed=true`}\n                                    title=\"opensea\"\n                                    width='400'\n                                    height='600'\n\n                                ></iframe>\n                            </Card>\n                        }\n                    </div>\n                </div>\n            }\n        </div>\n    );\n\n};\n\nconst query_profile = `\nquery TezosProfiles($address: String!){ \n    tzprofiles_by_pk(account: $address) \n    { \n      account,\n      discord,\n      twitter,\n      github,\n      ethereum,\n      domain_name,\n      logo,\n  alias,\n      website,\n      description,\n          valid_claims,\n  \n    } \n  }\n`\nconst query_objkts_created = `\nquery GetObjktsPaged($where: token_bool_exp = {}, $order_by: [token_order_by!] = {}, $limit: Int!, $offset: Int!) {\n    token(limit: $limit, offset: $offset, where: $where, order_by: $order_by) {\n      ...TokenDefault\n      __typename\n    }\n    token_aggregate(where: $where) {\n      aggregate {\n        count\n        __typename\n      }\n      __typename\n    }\n  }\n  \n  fragment TokenDefault on token {\n    id\n    pk_id\n    artifact_uri\n    creator_id\n    description\n    display_uri\n    thumbnail_uri\n    fa2_id\n    royalties\n    supply\n    timestamp\n    title\n    mime\n    last_listed\n    highest_bid\n    lowest_ask\n    flag\n    fa2 {\n      ...Fa2\n      __typename\n    }\n    creator {\n      ...UserDefault\n      __typename\n    }\n    token_attributes {\n      attribute {\n        id\n        name\n        type\n        value\n        count\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  \n  fragment Fa2 on fa2 {\n    active_auctions\n    active_listing\n    contract\n    description\n    name\n    owners\n    logo\n    volume_24h\n    volume_total\n    website\n    twitter\n    items\n    floor_price\n    type\n    collection_type\n    creator_id\n    collection_id\n    path\n    token_link\n    short_name\n    live\n    creator {\n      ...UserDefault\n      __typename\n    }\n    __typename\n  }\n  \n  fragment UserDefault on holder {\n    address\n    alias\n    site\n    twitter\n    description\n    tzdomain\n    flag\n    __typename\n  }\n  \n  `\n\nconst HashToURL = (hash, type) => {\n    // when on preview the hash might be undefined.\n    // its safe to return empty string as whatever called HashToURL is not going to be used\n    // artifactUri or displayUri\n    if (hash === undefined) {\n        return ''\n    }\n\n    switch (type) {\n        case 'HIC':\n            return hash.replace('ipfs://', 'https://pinata.hicetnunc.xyz/ipfs/')\n        case 'CLOUDFLARE':\n            return hash.replace('ipfs://', 'https://cloudflare-ipfs.com/ipfs/')\n        case 'PINATA':\n            return hash.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/')\n        case 'IPFS':\n            return hash.replace('ipfs://', 'https://ipfs.io/ipfs/')\n        case 'INFURA':\n            try {\n                var cidv1 = new ipfsClient.CID(hash.replace('ipfs://', '')).toV1()\n                var subdomain = cidv1.toBaseEncodedString('base32')\n                return `https://${subdomain}.ipfs.infura-ipfs.io/`\n            } catch (err) {\n                return undefined\n            }\n        case 'DWEB':\n            return hash.replace('ipfs://', 'http://dweb.link/ipfs/')\n        default:\n            console.error('please specify type')\n            return hash\n    }\n}","// @ts-nocheck\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\n\n//ui\nimport { Button } from \"@material-ui/core\";\n\n//logic\nimport { DAppClient } from \"@airgap/beacon-sdk\";\n//import _ from \"underscore\";\n//import { FirebaseContext } from \"./firebaseContext\";\nimport { Profile } from './components/profile';\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\n\n\nfunction App() {\n  const navigate = useNavigate();\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n  const [address, setAddress] = useState();\n\n  useEffect(() => {\n    async function getAddress() {\n      console.log(new URL(window.location.href).searchParams.get('profile'))\n      let profileAddress = new URL(window.location.href).searchParams.get('profile');\n      //setAddress(profileAddress);\n\n      if (!(profileAddress && profileAddress.includes(\".tez\"))) {\n        setAddress(profileAddress);\n      }\n      else {\n\n        await fetch('https://api.tezos.domains/graphql', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            query: `\n                {\n                  domain(name: \"` + profileAddress + `\") {\n                    name\n                    address\n                  }\n                }\n                `,\n            variables: {\n            },\n          }\n          ),\n        })\n          .then((res) => res.json())\n          .then((result) => {\n            console.log(result);\n            if (result.data.domain) {\n              setAddress(result.data.domain.address);\n            }\n          });\n      }\n\n\n    }\n    getAddress();\n  }, []);\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n        if (!address) {\n          navigate(\"/Assemble?profile=\" + activeAccount.address);\n        }\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n      if (!address) {\n        navigate(\"/Assemble?profile=\" + activeAccount.address);\n      }\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          margin: 6,\n        }}\n      >\n        <b>Assemble </b>\n      </div>\n\n      {!showUnsync &&\n        <div>\n\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            welcome sync and explore\n          </div>\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            profile search module\n          </div>\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            display random profile\n          </div>\n        </div>\n      }\n      {\n        (address || activeAccount) &&\n        <Profile\n          address={address ? address : activeAccount.address}\n          account={activeAccount}\n        />\n      }\n\n      <div\n        className=\"top-right\"\n        style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\" }}\n      >\n        {showUnsync && (\n          <Button\n            size={\"small\"}\n            title={\"unsync\"}\n            onClick={() => {\n              unsync();\n            }}\n          >\n            <u>unsync</u>{\" \"}\n          </Button>\n        )}\n\n        {showUnsync && <div> | </div>}\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            await sync();\n          }}\n        >\n          <u>{synced}</u>{\" \"}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <FirebaseProvider>\n      <SnackbarProvider maxSnack={3}>\n        <App />\n      </SnackbarProvider>\n    </FirebaseProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}