{"version":3,"sources":["firebaseContext.tsx","components/profile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","setModule","Promise","resolve","isSuccessful","getModules","getObjkts","getGoogleImages","fetchBase","FirebaseProvider","children","useCallback","address","module","value","key","a","fetch","method","headers","body","JSON","stringify","fetchRes","ok","message","statusText","json","query","Provider","Profile","account","enqueueSnackbar","useSnackbar","useContext","useState","slice","username","setUsername","isMobile","window","innerWidth","editMode","setEditMode","selectedEditField","setSelectedEditField","inputLabels","input","setInput","twitter","setTwitter","tumblr","setTumblr","github","setGithub","alias","setAlias","ethereum","setEthereum","createdObjkts","setCreatedObjkts","websites","setWebsites","images","setImages","googleInput","setGoogleInput","googleImages","setGoogleImages","changeProfile","uuid","concat","type","useEffect","modules","tempWebsites","tempImages","forEach","push","fetchModules","variables","then","res","result","console","log","data","reverseRecord","domain","name","getDomain","fetchGraphQL","operationsDoc","operationName","indexer","ress","addr","query_profile","errors","error","tzprofiles_by_pk","token","fetchTezosProfiles","fetchObjkts","googleSearch","imageDataWanted","map","url","alt","origin","title","imageLink","thumbnailLink","id","className","Avatar","src","style","width","height","Button","onClick","navigator","clipboard","writeText","open","variant","marginBottom","color","display","flexWrap","marginInline","marginBlock","Card","dataSource","sourceType","screenName","options","overflow","textAlign","index","marginTop","fontSize","HashToURL","display_uri","supply","lowest_ask","marginLeft","highest_bid","descriptionLength","imageHeight","showLoader","justifyContent","alignItems","Select","onChange","event","target","MenuItem","TextField","label","InputLabelProps","shrink","onKeyPress","overflowY","IconButton","length","findIndex","el","hash","undefined","replace","subdomain","ipfsClient","CID","toV1","toBaseEncodedString","err","dAppClient","DAppClient","App","navigate","useNavigate","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","setAddress","getActiveAccount","clearActiveAccount","sync","requestPermissions","permissions","URL","location","href","searchParams","get","profileAddress","includes","getAddress","getAcc","margin","position","size","unsync","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.dd543aa3.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\nexport interface IFirebaseContext {\n  setModule: (address, module, value, key) => Promise<IFetchResponseBase>;\n  getModules: (address) => Promise<IFetchResponseBase>;\n  getObjkts: (address) => Promise<IFetchResponseBase>;\n  getGoogleImages: (query) => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  setModule: () => Promise.resolve({ isSuccessful: false }),\n  getModules: () => Promise.resolve({ isSuccessful: false }),\n  getObjkts: () => Promise.resolve({ isSuccessful: false }),\n  getGoogleImages: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://assemble-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n\n  const setModule = useCallback(\n    async (address, module, value, key): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/module`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ address: address, module: module, value: value, key: key }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getModules =\n    useCallback(async (address): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/modules/${address}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n\n  const getObjkts =\n    useCallback(async (address): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/objkts/${address}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const getGoogleImages =\n    useCallback(async (query): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/search/${query}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        setModule,\n        getModules,\n        getObjkts,\n        getGoogleImages\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","// @ts-nocheck\nimport React, { useEffect, useState, useContext } from 'react'\nimport { Button, Avatar, Card, Select, MenuItem, TextField, IconButton } from \"@material-ui/core\";\nimport \"./profile.css\";\nimport { useSnackbar } from \"notistack\";\nimport { Timeline } from 'react-twitter-widgets'\nimport { FirebaseContext } from \"../firebaseContext\";\nimport { LinkPreview } from '@dhaiwat10/react-link-preview';\nimport { UserCard } from 'react-github-cards/dist/medium'\nimport 'react-github-cards/dist/medium.css';\nimport { uuid } from 'uuidv4';\n\nexport const Profile = (\n    { address, account }\n) => {\n    const { enqueueSnackbar } = useSnackbar();\n    const { getModules, setModule, getObjkts, getGoogleImages } = useContext(FirebaseContext);\n    const [username, setUsername] = useState(address.slice(0, 6) + \"...\" + address.slice(32, 36));\n    const isMobile = window.innerWidth <= 500;\n    const [editMode, setEditMode] = useState(false);\n    const [selectedEditField, setSelectedEditField] = React.useState(\"twitter\");\n    const inputLabels = {\n        \"twitter\": \"adventurecorpp\",\n        \"tumblr\": \"tezos\",\n        \"github\": \"tanerdurmaz\",\n        \"alias\": \"nickname\",\n        \"ethereum wallet\": \"0x4bA9285EDE9D46Bc367ee1d5cD5a8F1d9e6572e6\",\n        \"website\": \"https://adventurenetworks.net/\",\n        \"image\": \"https://picsum.photos/300\"\n    };\n    const [input, setInput] = useState();\n\n    //profile modules\n    const [twitter, setTwitter] = useState();\n    const [tumblr, setTumblr] = useState();\n    const [github, setGithub] = useState();\n    const [alias, setAlias] = useState();\n    const [ethereum, setEthereum] = useState();\n    const [createdObjkts, setCreatedObjkts] = useState();\n    const [websites, setWebsites] = useState();\n    const [images, setImages] = useState();\n    const [googleInput, setGoogleInput] = useState();\n    const [googleImages, setGoogleImages] = useState();\n\n    useEffect(() => {\n        async function fetchModules() {\n            let modules = await getModules(address);\n            let tempWebsites = [];\n            let tempImages = [];\n\n            modules.forEach(module => {\n                if (module.type === \"twitter\") {\n                    setTwitter(module.value);\n                } else if (module.type === \"tumblr\") {\n                    setTumblr(module.value);\n                } else if (module.type === \"github\") {\n                    setGithub(module.value);\n                }\n                else if (module.type === \"alias\") {\n                    setAlias(module.value);\n                }\n                else if (module.type === \"ethereum\") {\n                    setEthereum(module.value);\n                }\n                else if (module.type === \"website\") {\n                    tempWebsites.push(module)\n                }\n                else if (module.type === \"image\") {\n                    tempImages.push(module)\n                }\n                setWebsites(tempWebsites);\n                setImages(tempImages);\n\n            });\n        }\n\n        fetchModules();\n    }, [getModules, setModule, address]);\n\n    function changeProfile() {\n        //set\n        //notify\n        if (selectedEditField === \"twitter\") {\n            setModule(address, \"twitter\", input);\n            setTwitter(input);\n        } else if (selectedEditField === \"tumblr\") {\n            setModule(address, \"tumblr\", input);\n            setTumblr(input);\n        } else if (selectedEditField === \"github\") {\n            setModule(address, \"github\", input);\n            setGithub(input);\n        } else if (selectedEditField === \"alias\") {\n            setModule(address, \"alias\", input);\n            setAlias(input);\n        } else if (selectedEditField === \"ethereum\") {\n            setModule(address, \"ethereum\", input);\n            setEthereum(input);\n        } else if (selectedEditField === \"website\") {\n            let key = uuid();\n            setModule(address, \"website\", input, key);\n            setWebsites((websites) => websites.concat({ value: input, key: key, type: \"website\" }));\n        } else if (selectedEditField === \"image\") {\n            let key = uuid();\n            setModule(address, \"image\", input, key);\n            setImages((images) => images.concat({ value: input, key: key, type: \"image\" }));\n        }\n    }\n\n    const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInput(event.target.value)\n    };\n\n    const handleKeyPress = (event) => {\n        if (event.key === \"Enter\") {\n            changeProfile()\n        }\n    };\n\n    const handleChangeInputGoogle = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setGoogleInput(event.target.value)\n    };\n\n    const handleKeyPressGoogle = (event) => {\n        if (event.key === \"Enter\") {\n            googleSearch();\n        }\n    };\n    const handleChange = (event: SelectChangeEvent) => {\n        setSelectedEditField(event.target.value as string);\n\n        if (event.target.value === \"twitter\" && twitter) {\n            setInput(twitter)\n        } else if (event.target.value === \"tumblr\" && tumblr) {\n            setInput(tumblr)\n        } else if (event.target.value === \"github\" && github) {\n            setInput(github)\n        } else if (event.target.value === \"alias\" && alias) {\n            setInput(alias)\n        } else if (event.target.value === \"ethereum\" && ethereum) {\n            setInput(ethereum)\n        } else {\n            setInput(inputLabels[event.target.value])\n        }\n    };\n\n    useEffect(() => {\n        //get wallet names for ex. taner.tez\n        async function getDomain(address: string) {\n            let domain;\n            await fetch('https://api.tezos.domains/graphql', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query: `\n            {\n              reverseRecord(address: \"`+ address + `\"){owner domain{name}}\n            }\n            `,\n                    variables: {\n                    },\n                }\n                ),\n            })\n                .then((res) => res.json())\n                .then((result) => {\n                    console.log(result);\n                    if (result.data.reverseRecord) {\n                        domain = result.data.reverseRecord.domain.name;\n                        setUsername(domain);\n                    }\n                });\n        }\n        getDomain(address)\n    }, [address]);\n\n    useEffect(() => {\n        async function fetchGraphQL(operationsDoc, operationName, variables, indexer) {\n            let result = await fetch(indexer, {\n                method: 'POST',\n                body: JSON.stringify({\n                    query: operationsDoc,\n                    variables: variables,\n                    operationName: operationName,\n                }),\n            })\n\n            var ress = await result.json();\n            return ress;\n        }\n\n        async function fetchTezosProfiles(addr) {\n\n            const { errors, data } = await fetchGraphQL(\n                query_profile,\n                'TezosProfiles',\n                { address: addr },\n                'https://indexer.tzprofiles.com/v1/graphql'\n            )\n            if (errors) {\n                console.error(errors)\n            }\n            if (data) {\n                console.log(data);\n\n                if (data.tzprofiles_by_pk) {\n                    if (!twitter && data.tzprofiles_by_pk.twitter) {\n                        setTwitter(data.tzprofiles_by_pk.twitter);\n                    }\n                    if (!github && data.tzprofiles_by_pk.github) {\n                        setGithub(data.tzprofiles_by_pk.github)\n                    }\n                    if (!alias && data.tzprofiles_by_pk.alias) {\n                        setAlias(data.tzprofiles_by_pk.alias)\n                    }\n                    if (!ethereum && data.tzprofiles_by_pk.ethereum) {\n                        setEthereum(data.tzprofiles_by_pk.ethereum)\n                    }\n                }\n            }\n        }\n        fetchTezosProfiles(address)\n\n        async function fetchObjkts(address) {\n            setCreatedObjkts((await getObjkts(address)).token);\n        }\n        fetchObjkts(address);\n    }, [address, alias, ethereum, github, twitter, getObjkts]);\n\n    const googleSearch = async () => {\n        console.log(googleInput)\n\n        //setLoading(true);\n        const res = await getGoogleImages(googleInput);\n\n        const imageDataWanted = res.map(\n            ({ url, origin }: IResponseDataGoogle) => {\n                const { title } = origin;\n                return {\n                    alt: title,\n                    imageLink: url,\n                    thumbnailLink: url,\n                    id: url\n                };\n            }\n        );\n        console.log(imageDataWanted)\n        //setLoading(false);\n        setGoogleImages(imageDataWanted);\n\n    }\n\n    return (\n        <div >\n            <div className=\"center\">\n                <Avatar\n                    alt=\"Profile Picture\"\n                    src={`https://services.tzkt.io/v1/avatars/${address}`}\n                    style={{ width: 150, height: 150 }}\n                />\n            </div>\n            <div className=\"center\">\n                <b>{alias}</b>\n            </div>\n            <div className=\"center\">\n                <Button\n                    onClick={() => {\n                        navigator.clipboard.writeText(address);\n                        enqueueSnackbar(\n                            <div onClick={() => {\n                                window.open(`https://tzkt.io/${address}/operations`);\n                            }}\n                            > Wallet address coppied, click to view on explorer </div>, {\n                            variant: \"success\",\n                        });\n                    }}\n                >{username}</Button>\n            </div>\n            {account && account.address === address &&\n                <div className=\"center\" style={{ marginBottom: 20 }}>\n                    <Button\n                        variant=\"contained\" color=\"primary\"\n                        onClick={() => { setEditMode(!editMode) }}\n                    >\n                        {editMode ? \"finish edit\" : \"edit\"}\n                    </Button>\n\n                </div>\n            }\n\n            {!editMode &&\n                <div className=\"modules\" style={{ display: isMobile ? \"grid\" : \"flex\", width: \"100vw\", flexWrap: \"wrap\" }}>\n\n                    {twitter &&\n                        <div className=\"twitter\" style={{ marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0, width: isMobile ? \"90%\" : \"23.5%\" }}>\n                            <Card variant=\"outlined\">\n                                <Timeline\n                                    dataSource={{\n                                        sourceType: 'profile',\n                                        screenName: twitter\n                                    }}\n                                    options={{\n                                        width: '100%',\n                                        height: '600'\n                                    }}\n                                />\n                            </Card>\n                        </div>\n                    }\n\n                    {tumblr &&\n                        <div className=\"tumblr\" style={{ marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0, width: isMobile ? \"90%\" : \"23.5%\" }}>\n                            <Card variant=\"outlined\" >\n                                <iframe title={\"tumblr\"} src={`https://${tumblr}.tumblr.com/`} width={\"100%\"} height={600}></iframe>\n                            </Card>\n                        </div>\n                    }\n\n\n\n                    {ethereum &&\n                        <div style={{ marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0, width: isMobile ? \"90%\" : \"23.5%\" }}>\n                            <Card variant=\"outlined\" >\n                                <iframe src={`https://opensea.io/${ethereum}?embed=true`}\n                                    title=\"opensea\"\n                                    width='100%'\n                                    height='600'\n                                ></iframe>\n                            </Card>\n                        </div>\n                    }\n\n\n\n                    <div style={{ width: isMobile ? \"90%\" : \"23.5%\", height: 600, overflow: \"scroll\" }}>\n                        <Card variant=\"outlined\" >\n                            <div style={{ textAlign: \"center\" }}> <h2>Created Objkts</h2></div>\n\n                            {createdObjkts && createdObjkts.map((token, index) => (\n                                <div style={{ marginTop: 10 }}>\n                                    <Card variant=\"outlined\" >\n                                        <div style={{ textAlign: \"center\", fontSize: \"1.1em\" }}> <b>{token.title}</b></div>\n                                        <img src={HashToURL(token.display_uri, 'IPFS')} alt={token.title} width=\"100%\" />\n                                        <div style={{ textAlign: \"center\" }}> <b>{token.supply} X </b></div>\n                                        <div style={{ display: \"flex\" }}>\n                                            <div>\n                                                <b>\n                                                    price: {token.lowest_ask ? ((token.lowest_ask / 1000000) + \"ꜩ\") : \"-\"}\n                                                </b>\n                                            </div>\n                                            <div style={{ marginLeft: \"auto\" }}>\n                                                <b>\n                                                    offer: {token.highest_bid ? ((token.highest_bid / 1000000) + \"ꜩ\") : \"-\"}\n                                                </b>\n                                            </div>\n                                        </div>\n                                    </Card>\n                                </div>\n                            ))}\n                        </Card>\n                    </div>\n\n                    {websites && websites.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0, width: isMobile ? \"90%\" : \"23.5%\" }}>\n\n                            <Card variant=\"outlined\" >\n                                <LinkPreview\n                                    url={value}\n                                    //fallback={noLinkPrev}\n                                    descriptionLength={50}\n                                    imageHeight={300}\n                                    showLoader={true}\n                                />\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {images && images.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0, width: isMobile ? \"90%\" : \"23.5%\" }}>\n                            <Card variant=\"outlined\" >\n                                <img src={value} alt={value} width=\"100%\" />\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {github &&\n                        <div className=\"github\" style={{ width: isMobile ? \"90%\" : \"23.5%\", height: 260, marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0 }}>\n                            <div style={{ justifyContent: \"center\", alignItems: \"center\", width: \"100%\", display: \"flex\" }}>\n                                <Card variant=\"outlined\" >\n                                    <UserCard username={github} />\n                                </Card>\n                            </div>\n                        </div>\n                    }\n                </div>\n            }\n\n            {editMode &&\n                <div style={{ marginTop: 30 }}>\n                    <div className=\"center\">\n                        <Select\n                            variant=\"outlined\"\n                            value={selectedEditField}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={\"twitter\"}>Twitter</MenuItem>\n                            <MenuItem value={\"tumblr\"}>Tumblr</MenuItem>\n                            <MenuItem value={\"github\"}>Github</MenuItem>\n                            <MenuItem value={\"alias\"}>Alias</MenuItem>\n                            <MenuItem value={\"ethereum\"}>Ethereum</MenuItem>\n                            <MenuItem value={\"website\"}>+Website</MenuItem>\n                            <MenuItem value={\"image\"}>+Image</MenuItem>\n                        </Select>\n\n                        <TextField id=\"outlined-basic\" label={inputLabels[selectedEditField]} variant=\"outlined\"\n                            InputLabelProps={{ shrink: true }}\n                            onChange={handleChangeInput}\n                            value={input}\n                            onKeyPress={handleKeyPress}\n                        />\n\n                        <Button\n                            variant=\"contained\" color=\"primary\"\n                            style={{ marginLeft: 10 }}\n                            onClick={() => { changeProfile() }}\n                        >\n                            Post\n                        </Button>\n                    </div>\n\n                    {selectedEditField === \"image\" &&\n                        <div className=\"center\" style={{ marginTop: 20 }}>\n\n                            <TextField id=\"outlined-basic\" label={\"Google Search\"} variant=\"outlined\"\n                                onChange={handleChangeInputGoogle}\n                                value={googleInput}\n                                onKeyPress={handleKeyPressGoogle}\n                            />\n                            <Button\n                                variant=\"contained\" color=\"primary\"\n                                style={{ marginLeft: 10 }}\n                                onClick={() => { googleSearch() }}\n                            >\n                                Search\n                            </Button>\n                        </div>\n                    }\n\n                    <br></br>\n                    <br></br>\n                    <div className=\"background-container\" style={{ overflowY: 'auto' }}>\n                        <div className=\"background-icon-list\" >\n                            {googleImages &&\n                                googleImages.map(({ alt, thumbnailLink, imageLink, id }) => (\n                                    <IconButton\n                                        key={id}\n                                        onClick={() =>\n                                            //sendImage(imageLink, isSwitchChecked ? 'background' : 'image')\n                                            //<img src={thumbnailLink} alt={alt} width={\"200\"} />\n                                            // setImage({ alt, thumbnailLink, imageLink, id })\n                                            setInput(imageLink)\n                                        }\n\n                                    >\n                                        <Avatar variant=\"rounded\" src={thumbnailLink} alt={alt} style={{ width: 100, height: 100 }} />\n                                    </IconButton>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"center\" style={{ marginTop: 25 }}><b>auto preview</b> </div>\n                    <div className=\"center\" style={{ marginTop: 5 }}>\n                        {selectedEditField === \"twitter\" &&\n                            <div className=\"twitter\" style={{ marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0 }}>\n                                <Card variant=\"outlined\">\n                                    <Timeline\n                                        dataSource={{\n                                            sourceType: 'profile',\n                                            screenName: input\n                                        }}\n                                        options={{\n                                            width: '400',\n                                            height: '600'\n                                        }}\n                                    />\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"tumblr\" &&\n                            <div className=\"tumblr\" >\n                                <Card variant=\"outlined\" >\n                                    <iframe title={\"tumblr\"} src={`https://${input}.tumblr.com/`} width={400} height={600}></iframe>\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"github\" &&\n                            <div className=\"github\" style={{ height: 260, marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0 }}>\n                                <Card variant=\"outlined\" >\n                                    <UserCard key={input} username={input} />\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"alias\" &&\n                            <div style={{ marginTop: 25 }}>\n                                <b>{alias}</b>\n                            </div>\n                        }\n                        {selectedEditField === \"ethereum\" && input &&\n                            <Card variant=\"outlined\" >\n                                <iframe src={`https://opensea.io/${input}?embed=true`}\n                                    title=\"opensea\"\n                                    width='400'\n                                    height='600'\n\n                                ></iframe>\n                            </Card>\n                        }\n                        {selectedEditField === \"website\" &&\n                            <Card variant=\"outlined\" >\n                                <LinkPreview\n\n                                    url={input}\n                                    //fallback={noLinkPrev}\n                                    descriptionLength={50}\n                                    imageHeight={300}\n                                    showLoader={true}\n                                />\n                            </Card>\n                        }\n                        {selectedEditField === \"image\" &&\n                            <Card variant=\"outlined\" >\n                                <img src={input} alt={input} width=\"100%\" />\n                            </Card>\n                        }\n                    </div>\n                    <div className=\"center\" style={{ marginTop: 25 }}><b>Links</b> </div>\n\n                    <div className=\"center\" style={{ marginTop: 25, fontSize: isMobile ? \"0.5em\" : \"1em\" }}>\n                        <table style={{ width: 400 }}>\n\n                            {twitter && <tr>\n                                <td >Twitter</td>\n                                <td>{twitter}</td>\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"twitter\", \"\");\n                                            setTwitter(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>\n                            }\n                            {tumblr && <tr>\n                                <td >Tumblr</td>\n                                <td>{tumblr}</td>\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"tumblr\", \"\");\n                                            setTumblr(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>\n                            }\n                            {github && <tr>\n                                <td >Github</td>\n                                <td>{github}</td>\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"github\", \"\");\n                                            setGithub(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>}\n                            {alias && <tr>\n                                <td >Alias</td>\n                                <td>{alias}</td>\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"alias\", \"\");\n                                            setAlias(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>}\n                            {ethereum && <tr>\n                                <td >Ethereum</td>\n                                <td>{ethereum.slice(0, 16) + \"...\" + ethereum.slice(32, 63)}</td>\n\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"ethereum\", \"\");\n                                            setEthereum(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>}\n\n                            {websites && websites.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Website</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"website\", \"\", key);\n                                                let index = websites.findIndex((el) => el.key === key)\n\n                                                setWebsites([\n                                                    ...websites.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...websites.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {images && images.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Image</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"image\", \"\", key);\n                                                let index = images.findIndex((el) => el.key === key)\n\n                                                setImages([\n                                                    ...images.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...images.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </table>\n\n                    </div>\n\n                </div>\n            }\n        </div >\n    );\n\n};\n\nconst query_profile = `\nquery TezosProfiles($address: String!){ \n    tzprofiles_by_pk(account: $address) \n    { \n      account,\n      discord,\n      twitter,\n      github,\n      ethereum,\n      domain_name,\n      logo,\n  alias,\n      website,\n      description,\n          valid_claims,\n  \n    } \n  }\n`\n\n\nconst HashToURL = (hash, type) => {\n    // when on preview the hash might be undefined.\n    // its safe to return empty string as whatever called HashToURL is not going to be used\n    // artifactUri or displayUri\n    if (hash === undefined) {\n        return ''\n    }\n\n    switch (type) {\n        case 'HIC':\n            return hash.replace('ipfs://', 'https://pinata.hicetnunc.xyz/ipfs/')\n        case 'CLOUDFLARE':\n            return hash.replace('ipfs://', 'https://cloudflare-ipfs.com/ipfs/')\n        case 'PINATA':\n            return hash.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/')\n        case 'IPFS':\n            return hash.replace('ipfs://', 'https://ipfs.io/ipfs/')\n        case 'INFURA':\n            try {\n                var cidv1 = new ipfsClient.CID(hash.replace('ipfs://', '')).toV1()\n                var subdomain = cidv1.toBaseEncodedString('base32')\n                return `https://${subdomain}.ipfs.infura-ipfs.io/`\n            } catch (err) {\n                return undefined\n            }\n        case 'DWEB':\n            return hash.replace('ipfs://', 'http://dweb.link/ipfs/')\n        default:\n            console.error('please specify type')\n            return hash\n    }\n}","// @ts-nocheck\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\n\n//ui\nimport { Button } from \"@material-ui/core\";\n\n//logic\nimport { DAppClient } from \"@airgap/beacon-sdk\";\n//import _ from \"underscore\";\n//import { FirebaseContext } from \"./firebaseContext\";\nimport { Profile } from './components/profile';\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\n\n\nfunction App() {\n  const navigate = useNavigate();\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n  const [address, setAddress] = useState();\n\n  useEffect(() => {\n    async function getAddress() {\n      console.log(new URL(window.location.href).searchParams.get('profile'))\n      let profileAddress = new URL(window.location.href).searchParams.get('profile');\n      //setAddress(profileAddress);\n\n      if (!(profileAddress && profileAddress.includes(\".tez\"))) {\n        setAddress(profileAddress);\n      }\n      else if (profileAddress) {\n\n        await fetch('https://api.tezos.domains/graphql', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            query: `\n                {\n                  domain(name: \"` + profileAddress + `\") {\n                    name\n                    address\n                  }\n                }\n                `,\n            variables: {\n            },\n          }\n          ),\n        })\n          .then((res) => res.json())\n          .then((result) => {\n            console.log(result);\n            if (result.data.domain) {\n              setAddress(result.data.domain.address);\n            }\n          });\n      }\n\n\n    }\n    getAddress();\n  }, [setAddress]);\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n        if (!address) {\n          navigate(\"/Assemble?profile=\" + activeAccount.address);\n        }\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n      if (!address) {\n        navigate(\"/Assemble?profile=\" + activeAccount.address);\n      }\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          margin: 6,\n        }}\n      >\n        <b>profile assembler </b>\n      </div>\n\n      {!showUnsync &&\n        <div>\n\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            welcome sync and explore\n          </div>\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            profile search module\n          </div>\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            display random profile\n          </div>\n        </div>\n      }\n      {\n        (address || activeAccount) &&\n        <Profile\n          address={address ? address : activeAccount.address}\n          account={activeAccount}\n        />\n      }\n\n      <div\n        className=\"top-right\"\n        style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\" }}\n      >\n        {showUnsync && (\n          <Button\n            size={\"small\"}\n            title={\"unsync\"}\n            onClick={() => {\n              unsync();\n            }}\n          >\n            <u>unsync</u>{\" \"}\n          </Button>\n        )}\n\n        {showUnsync && <div> | </div>}\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            await sync();\n          }}\n        >\n          <u>{synced}</u>{\" \"}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <FirebaseProvider>\n      <SnackbarProvider maxSnack={3}>\n        <App />\n      </SnackbarProvider>\n    </FirebaseProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}