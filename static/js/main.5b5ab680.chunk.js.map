{"version":3,"sources":["components/profile.tsx","App.tsx","reportWebVitals.ts","firebaseContext.tsx","index.tsx"],"names":["Profile","account","enqueueSnackbar","useSnackbar","useState","address","slice","username","setUsername","tezosProfiles","setTezosProfiles","isMobile","window","innerWidth","useEffect","a","fetch","method","headers","body","JSON","stringify","query","variables","then","res","json","result","console","log","data","reverseRecord","domain","name","getDomain","fetchGraphQL","operationsDoc","operationName","ress","addr","query_profile","errors","error","tzprofiles_by_pk","fetchCollection","className","Avatar","alt","src","style","width","height","alias","Button","onClick","navigator","clipboard","writeText","open","variant","display","flexWrap","twitter","marginInline","marginBlock","Card","dataSource","sourceType","screenName","options","github","dAppClient","DAppClient","App","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","getActiveAccount","clearActiveAccount","sync","requestPermissions","permissions","getAcc","fontSize","alignItems","margin","textAlign","position","size","title","unsync","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","FirebaseContext","React","createContext","getProfileFB","Promise","resolve","isSuccessful","setProfileFB","getAllProfilesFB","fetchBase","FirebaseProvider","children","useCallback","key","fetchRes","ok","profile","message","statusText","Provider","value","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.5b5ab680.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useEffect, useState } from 'react'\nimport { Button, Avatar, Card } from \"@material-ui/core\";\nimport \"./profile.css\";\nimport { useSnackbar } from \"notistack\";\nimport { Timeline } from 'react-twitter-widgets'\n\nimport { UserCard } from 'react-github-cards/dist/medium'\nimport 'react-github-cards/dist/medium.css';\n\nexport const Profile = (\n    { account }\n) => {\n    const { enqueueSnackbar } = useSnackbar();\n    const [username, setUsername] = useState(account.address.slice(0, 6) + \"...\" + account.address.slice(32, 36));\n    const [tezosProfiles, setTezosProfiles] = useState();\n    const isMobile = window.innerWidth <= 500;\n\n    useEffect(() => {\n        //get wallet names for ex. taner.tez\n        async function getDomain(address: string) {\n            let domain;\n            await fetch('https://api.tezos.domains/graphql', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query: `\n            {\n              reverseRecord(address: \"`+ address + `\"){owner domain{name}}\n            }\n            `,\n                    variables: {\n                    },\n                }\n                ),\n            })\n                .then((res) => res.json())\n                .then((result) => {\n                    console.log(result);\n                    if (result.data.reverseRecord) {\n                        domain = result.data.reverseRecord.domain.name;\n                        setUsername(domain);\n                    }\n                });\n        }\n        getDomain(account.address)\n    }, [account]);\n\n    useEffect(() => {\n        async function fetchGraphQL(operationsDoc, operationName, variables) {\n            let result = await fetch('https://indexer.tzprofiles.com/v1/graphql', {\n                method: 'POST',\n                body: JSON.stringify({\n                    query: operationsDoc,\n                    variables: variables,\n                    operationName: operationName,\n                }),\n            })\n\n            var ress = await result.json();\n            return ress;\n        }\n\n        async function fetchCollection(addr) {\n\n            const { errors, data } = await fetchGraphQL(\n                query_profile,\n                'TezosProfiles',\n                { address: addr }\n            )\n            if (errors) {\n                console.error(errors)\n            }\n            if (data) {\n                console.log(data);\n                setTezosProfiles(data.tzprofiles_by_pk)\n            }\n        }\n        fetchCollection(account.address)\n        //fetchCollection(\"tz1cZpxNs8WtpJxfMu7CK39KopAaMdEUYHwR\")\n\n\n    }, [account]);\n\n    return (\n        <div >\n            <div className=\"center\">\n                <Avatar\n                    alt=\"Profile Picture\"\n                    src={`https://services.tzkt.io/v1/avatars/${account.address}`}\n                    style={{ width: 150, height: 150 }}\n                />\n            </div>\n            <div className=\"center\">\n                {tezosProfiles && <b>{tezosProfiles.alias}</b>}\n            </div>\n            <div className=\"center\">\n                <Button\n                    onClick={() => {\n                        navigator.clipboard.writeText(account.address);\n                        enqueueSnackbar(\n                            <div onClick={() => {\n                                window.open(`https://tzkt.io/${account.address}/operations`);\n                            }}\n                            > Wallet address coppied, click to view on explorer </div>, {\n                            variant: \"success\",\n                        });\n                    }}\n                >{username}</Button>\n            </div>\n\n            <div className=\"modules\" style={{ display: isMobile ? \"grid\" : \"flex\", width: \"100vw\", flexWrap: \"wrap\" }}>\n                {tezosProfiles && tezosProfiles.twitter &&\n                    <div className=\"twitter\" style={{ marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0 }}>\n                        <Card variant=\"outlined\">\n                            <Timeline\n                                dataSource={{\n                                    sourceType: 'profile',\n                                    screenName: tezosProfiles.twitter\n                                }}\n                                options={{\n                                    width: '400',\n                                    height: '600'\n                                }}\n                            />\n                        </Card>\n                    </div>\n                }\n\n                {tezosProfiles && tezosProfiles.github &&\n                    <div className=\"github\" style={{ height: 260, marginInline: isMobile ? \"auto\" : 10, marginBlock: isMobile ? 10 : 0 }}>\n                        <Card variant=\"outlined\" >\n                            <UserCard username={tezosProfiles.github} />\n                        </Card>\n                    </div>\n                }\n\n            </div>\n        </div >\n    );\n\n};\n\nconst query_profile = `\nquery TezosProfiles($address: String!){ \n    tzprofiles_by_pk(account: $address) \n    { \n      account,\n      discord,\n      twitter,\n      github,\n      ethereum,\n      domain_name,\n      logo,\n  alias,\n      website,\n      description,\n          valid_claims,\n  \n    } \n  }\n`","// @ts-nocheck\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\n\n//ui\nimport { Button } from \"@material-ui/core\";\n\n//logic\nimport { DAppClient } from \"@airgap/beacon-sdk\";\n//import _ from \"underscore\";\n//import { FirebaseContext } from \"./firebaseContext\";\nimport { Profile } from './components/profile';\n\n\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\n\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n  //const { getProfileFB, setProfileFB, getAllProfilesFB } = useContext(FirebaseContext);\n\n\n\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          margin: 6,\n        }}\n      >\n        <b>Assemble </b>\n      </div>\n\n      {!showUnsync &&\n        <div>\n\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            welcome sync and explore\n          </div>\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            profile search module\n          </div>\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            display random profile\n          </div>\n        </div>\n      }\n      {\n        activeAccount &&\n        <Profile\n          account={activeAccount}\n        />\n      }\n\n      <div\n        className=\"top-right\"\n        style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\" }}\n      >\n        {showUnsync && (\n          <Button\n            size={\"small\"}\n            title={\"unsync\"}\n            onClick={() => {\n              unsync();\n            }}\n          >\n            <u>unsync</u>{\" \"}\n          </Button>\n        )}\n\n        {showUnsync && <div> | </div>}\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            await sync();\n          }}\n        >\n          <u>{synced}</u>{\" \"}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\ninterface IProfile {\n  color: string;\n  timestamp: Date;\n  key: string;\n  username: string;\n}\nexport interface IFirebaseContext {\n  getProfileFB: (key: string) => Promise<IFetchResponseBase>;\n  setProfileFB: (profile: IProfile) => Promise<IFetchResponseBase>;\n\n  getAllProfilesFB: () => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  getProfileFB: () => Promise.resolve({ isSuccessful: false }),\n  setProfileFB: () => Promise.resolve({ isSuccessful: false }),\n  getAllProfilesFB: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://network1-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n  const getProfileFB = useCallback(\n    async (key: string): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/profile/${key}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    },\n    []\n  );\n\n  const setProfileFB = useCallback(\n    async (profile: IProfile): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/profile`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ profile: profile }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getAllProfilesFB =\n    useCallback(async (): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/allProfiles`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        getProfileFB,\n        setProfileFB,\n        getAllProfilesFB,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}