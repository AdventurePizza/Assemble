{"version":3,"sources":["firebaseContext.tsx","components/Unfurl.tsx","assets/loading.svg","components/News.tsx","components/profile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","setModule","Promise","resolve","isSuccessful","getModules","getObjkts","getGoogleImages","getSpotify","getUnfurl","getNews","fetchBase","FirebaseProvider","children","useCallback","address","module","value","key","a","fetch","method","headers","body","JSON","stringify","fetchRes","ok","message","statusText","json","query","url","Provider","Unfurl","useState","data","setData","useContext","useEffect","res","console","log","grab","Card","onClick","window","open","alt","src","image","width","title","description","News","items","slice","map","link","Profile","account","enqueueSnackbar","useSnackbar","username","setUsername","isMobile","innerWidth","editMode","setEditMode","selectedEditField","setSelectedEditField","inputLabels","input","setInput","twitter","setTwitter","tumblr","setTumblr","github","setGithub","alias","setAlias","ethereum","setEthereum","createdObjkts","setCreatedObjkts","ownedObjkts","setOwnedObjkts","websites","setWebsites","images","setImages","googleInput","setGoogleInput","googleImages","setGoogleImages","songs","setSongs","wallets","setWallets","linkedin","setLinkedin","dribbble","setDribbble","behance","setBehance","arena","setArena","fxhash","setFxhash","versum","setVersum","teia","setTeia","objkt","setObjkt","zora","setZora","foundation","setFoundation","loadingModules","setLoadingModules","news","setNews","changeProfile","uuid","concat","type","modules","tempWebsites","tempImages","tempWallets","tempTumblr","tempTwitter","tempLinkedin","tempDribbble","tempBehance","tempArena","tempFxhash","tempVersum","tempTeia","tempObjkt","tempZora","tempFoundation","tempNews","forEach","push","tempCreatedCollections","tempOwnedCollections","i","length","results","objkts","created","token","wallet","owned","token_holder","fetchModules","variables","then","result","reverseRecord","domain","name","getDomain","fetchGraphQL","operationsDoc","operationName","indexer","ress","addr","query_profile","errors","error","tzprofiles_by_pk","fetchTezosProfiles","fetchSongs","googleSearch","imageDataWanted","origin","imageLink","thumbnailLink","id","className","Avatar","style","height","Button","navigator","clipboard","writeText","variant","marginBottom","color","loading","display","flexWrap","marginInline","marginBlock","overflow","elevation","textAlign","index","marginTop","fontSize","HashToURL","display_uri","supply","lowest_ask","marginLeft","highest_offer","dataSource","sourceType","screenName","options","justifyContent","alignItems","song","timestamp","frameBorder","allow","sandbox","size","Grid","container","justify","item","Select","onChange","event","target","MenuItem","TextField","label","InputLabelProps","shrink","onKeyPress","overflowY","IconButton","findIndex","el","hash","replace","subdomain","ipfsClient","CID","toV1","toBaseEncodedString","err","dAppClient","DAppClient","App","navigate","useNavigate","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","setAddress","getActiveAccount","clearActiveAccount","sync","requestPermissions","permissions","URL","location","href","searchParams","get","profileAddress","includes","getAddress","getAcc","margin","fontFamily","position","unsync","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.5f0cec89.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\nexport interface IFirebaseContext {\n  setModule: (address, module, value, key) => Promise<IFetchResponseBase>;\n  getModules: (address) => Promise<IFetchResponseBase>;\n  getObjkts: (address) => Promise<IFetchResponseBase>;\n  getGoogleImages: (query) => Promise<IFetchResponseBase>;\n  getSpotify: (address) => Promise<IFetchResponseBase>;\n  getUnfurl: () => Promise<IFetchResponseBase>;\n  getNews: (query) => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  setModule: () => Promise.resolve({ isSuccessful: false }),\n  getModules: () => Promise.resolve({ isSuccessful: false }),\n  getObjkts: () => Promise.resolve({ isSuccessful: false }),\n  getGoogleImages: () => Promise.resolve({ isSuccessful: false }),\n  getSpotify: () => Promise.resolve({ isSuccessful: false }),\n  getUnfurl: () => Promise.resolve({ isSuccessful: false }),\n  getNews: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://assemble-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n\n  const setModule = useCallback(\n    async (address, module, value, key): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/module`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ address: address, module: module, value: value, key: key }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getModules =\n    useCallback(async (address): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/modules/${address}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n\n  const getObjkts =\n    useCallback(async (address): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/objkts/${address}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const getGoogleImages =\n    useCallback(async (query): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/search/${query}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const getSpotify =\n    useCallback(async (address): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/spotify/${address}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const getUnfurl =\n    useCallback(async (url): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/unfurl`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ url: url }),\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const getNews =\n    useCallback(async (query): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/news/${query}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        setModule,\n        getModules,\n        getObjkts,\n        getGoogleImages,\n        getSpotify,\n        getUnfurl,\n        getNews\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","// @ts-nocheck\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Card } from \"@material-ui/core\";\nimport { FirebaseContext } from \"../firebaseContext\";\n\ntype UnfurlProps = {\n  url: string\n}\n\nexport const Unfurl = ({ url }: UnfurlProps) => {\n  const [data, setData] = useState();\n  const { getUnfurl } = useContext(FirebaseContext);\n\n  useEffect(() => {\n    async function grab() {\n      let res = await getUnfurl(url);\n\n      console.log(res);\n      setData(res);\n    }\n    grab();\n  }, [getUnfurl]);\n\n  return (\n    <Card>\n      {data &&\n        <div onClick={() => window.open(url, \"_blank\")}>\n          <img alt={url} src={data.image} width=\"100%\" />\n          <h4>{data.title}</h4>\n\n          <p>{data.description}</p>\n          <p><small>{url}</small></p>\n        </div>\n      }\n    </Card>\n  );\n}\n\n","export default __webpack_public_path__ + \"static/media/loading.a5db8338.svg\";","// @ts-nocheck\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Card } from \"@material-ui/core\";\nimport { FirebaseContext } from \"../firebaseContext\";\nimport { Unfurl } from './Unfurl';\n\ntype NewsProps = {\n  query: string\n}\n\nexport const News = ({ query }: NewsProps) => {\n  const [data, setData] = useState();\n  const { getNews } = useContext(FirebaseContext);\n\n  useEffect(() => {\n    async function grab() {\n      let res = await getNews(query);\n\n      console.log(res);\n      setData(res);\n    }\n    grab();\n  }, [getNews]);\n\n  return (\n    <Card>\n      {\n        data && data.items && (data.items.slice(0, 10)).map(({ title, description, link }) => (\n          <div >\n            <Unfurl url={link} />\n          </div>\n        ))\n      }\n    </Card>\n  );\n}\n\n","// @ts-nocheck\nimport React, { useEffect, useState, useContext } from 'react'\nimport { Grid, Button, Avatar, Card, Select, MenuItem, TextField, IconButton } from \"@material-ui/core\";\nimport \"./profile.css\";\nimport { useSnackbar } from \"notistack\";\nimport { Timeline } from 'react-twitter-widgets'\nimport { FirebaseContext } from \"../firebaseContext\";\nimport { LinkPreview } from '@dhaiwat10/react-link-preview';\nimport { UserCard } from 'react-github-cards/dist/medium'\nimport 'react-github-cards/dist/medium.css';\nimport { uuid } from 'uuidv4';\nimport { Unfurl } from './Unfurl';\nimport loading from '../assets/loading.svg';\nimport { News } from './News';\n\nexport const Profile = (\n    { address, account }\n) => {\n    const { enqueueSnackbar } = useSnackbar();\n    const { getModules, setModule, getObjkts, getGoogleImages, getSpotify, getNews } = useContext(FirebaseContext);\n    const [username, setUsername] = useState(address.slice(0, 6) + \"...\" + address.slice(32, 36));\n    const isMobile = window.innerWidth <= 500;\n    const [editMode, setEditMode] = useState(false);\n    const [selectedEditField, setSelectedEditField] = React.useState(\"twitter\");\n    const inputLabels = {\n        \"news\": \"ukraine\",\n        \"twitter\": \"adventurecorpp\",\n        \"tumblr\": \"tezos\",\n        \"github\": \"tanerdurmaz\",\n        \"alias\": \"nickname\",\n        \"ethereum wallet\": \"0x4bA9285EDE9D46Bc367ee1d5cD5a8F1d9e6572e6\",\n        \"website\": \"https://adventurenetworks.net/\",\n        \"image\": \"https://picsum.photos/300\",\n        \"linkedin\": \"https://www.linkedin.com/company/adventurenetworks\",\n        \"dribbble\": \"https://dribbble.com/SQUARESPACE\",\n        \"behance\": \"https://www.behance.net/gallery/138457467/FRACTAL-ISTANBUL-DREAMS?tracking_source=search_projects\",\n        \"arena\": \"https://www.are.na/charles-broskoski/artist-websites\",\n        \"fxhash\": \"https://www.fxhash.xyz/u/ciphrd\",\n        \"versum\": \"https://versum.xyz/user/tz1iQEmi4ikjDPP4umrAV6DiCVZLX6XWdoJF/created\",\n        \"teia\": \"https://teia.art/objkt/575343\",\n        \"objkt\": \"https://objkt.com/profile/mhoydich/created\",\n        \"zora\": \"https://zora.co/collections/0x715132af755D9D3d81eE0AcF11e60692719bc415/1\",\n        \"foundation\": \"https://foundation.app/collection/FI\"\n    };\n    const [input, setInput] = useState();\n\n    //profile modules\n    const [twitter, setTwitter] = useState([]);\n    const [tumblr, setTumblr] = useState([]);\n    const [github, setGithub] = useState();\n    const [alias, setAlias] = useState();\n    const [ethereum, setEthereum] = useState();\n    const [createdObjkts, setCreatedObjkts] = useState();\n    const [ownedObjkts, setOwnedObjkts] = useState();\n    const [websites, setWebsites] = useState();\n    const [images, setImages] = useState();\n    const [googleInput, setGoogleInput] = useState();\n    const [googleImages, setGoogleImages] = useState();\n    const [songs, setSongs] = useState();\n    const [wallets, setWallets] = useState();\n    const [linkedin, setLinkedin] = useState([]);\n    const [dribbble, setDribbble] = useState([]);\n    const [behance, setBehance] = useState([]);\n    const [arena, setArena] = useState([]);\n    const [fxhash, setFxhash] = useState([]);\n    const [versum, setVersum] = useState([]);\n    const [teia, setTeia] = useState([]);\n    const [objkt, setObjkt] = useState([]);\n    const [zora, setZora] = useState([]);\n    const [foundation, setFoundation] = useState([]);\n    const [loadingModules, setLoadingModules] = useState(true);\n    const [news, setNews] = useState([]);\n\n\n    useEffect(() => {\n        async function fetchModules() {\n            let modules = await getModules(address);\n            let tempWebsites = [];\n            let tempImages = [];\n            let tempWallets = [{ key: \"user wallet\", type: \"wallet\", value: address }];\n            let tempTumblr = [];\n            let tempTwitter = [];\n            let tempLinkedin = [];\n            let tempDribbble = [];\n            let tempBehance = [];\n            let tempArena = [];\n            let tempFxhash = [];\n            let tempVersum = [];\n            let tempTeia = [];\n            let tempObjkt = [];\n            let tempZora = [];\n            let tempFoundation = [];\n            let tempNews = [];\n\n            if (modules) {\n                modules.forEach(module => {\n                    if (module.type === \"twitter\") {\n                        tempTwitter.push(module);\n                    } else if (module.type === \"tumblr\") {\n                        tempTumblr.push(module);\n                    } else if (module.type === \"github\") {\n                        setGithub(module.value);\n                    }\n                    else if (module.type === \"alias\") {\n                        setAlias(module.value);\n                    }\n                    else if (module.type === \"ethereum\") {\n                        setEthereum(module.value);\n                    }\n                    else if (module.type === \"website\") {\n                        tempWebsites.push(module)\n                    }\n                    else if (module.type === \"image\") {\n                        tempImages.push(module)\n                    }\n                    else if (module.type === \"wallet\") {\n                        tempWallets.push(module)\n                    }\n                    else if (module.type === \"linkedin\") {\n                        tempLinkedin.push(module);\n                    }\n                    else if (module.type === \"dribbble\") {\n                        tempDribbble.push(module);\n                    }\n                    else if (module.type === \"behance\") {\n                        tempBehance.push(module);\n                    }\n                    else if (module.type === \"arena\") {\n                        tempArena.push(module);\n                    }\n                    else if (module.type === \"fxhash\") {\n                        tempFxhash.push(module);\n                    }\n                    else if (module.type === \"versum\") {\n                        tempVersum.push(module);\n                    }\n                    else if (module.type === \"teia\") {\n                        tempTeia.push(module);\n                    }\n                    else if (module.type === \"objkt\") {\n                        tempObjkt.push(module);\n                    }\n                    else if (module.type === \"zora\") {\n                        tempZora.push(module);\n                    }\n                    else if (module.type === \"foundation\") {\n                        tempFoundation.push(module);\n                    }\n                    else if (module.type === \"news\") {\n                        tempNews.push(module);\n                    }\n                    setWebsites(tempWebsites);\n                    setImages(tempImages);\n                    setWallets(tempWallets);\n                    setTumblr(tempTumblr);\n                    setTwitter(tempTwitter);\n                    setLinkedin(tempLinkedin);\n                    setDribbble(tempDribbble);\n                    setBehance(tempBehance);\n                    setArena(tempArena);\n                    setFxhash(tempFxhash);\n                    setVersum(tempVersum);\n                    setTeia(tempTeia);\n                    setObjkt(tempObjkt);\n                    setZora(tempZora);\n                    setFoundation(tempFoundation);\n                    setNews(tempNews);\n                    setLoadingModules(false);\n\n                    //console.log(modules)\n                });\n            }\n\n            let tempCreatedCollections = [];\n            let tempOwnedCollections = [];\n            if (tempWallets) {\n                for (let i = 0; i < tempWallets.length; i++) {\n                    if (tempWallets[i].value) {\n                        let results = await getObjkts(tempWallets[i].value);\n                        if (results) {\n                            tempCreatedCollections.push({ objkts: results.created.token, wallet: tempWallets[i].value })\n                            tempOwnedCollections.push({ objkts: results.owned.token_holder, wallet: tempWallets[i].value })\n                        }\n                    }\n                }\n                setCreatedObjkts(tempCreatedCollections)\n                setOwnedObjkts(tempOwnedCollections)\n            }\n        }\n\n        fetchModules();\n\n    }, [getModules, setModule, address, getObjkts]);\n\n    function changeProfile() {\n        //set\n        //notify\n        if (selectedEditField === \"twitter\") {\n            let key = uuid();\n            setModule(address, \"twitter\", input, key);\n            setTwitter((twitter) => twitter.concat({ value: input, key: key, type: \"twitter\" }));\n        } else if (selectedEditField === \"tumblr\") {\n            let key = uuid();\n            setModule(address, \"tumblr\", input, key);\n            setTumblr((tumblr) => tumblr.concat({ value: input, key: key, type: \"tumblr\" }));\n        } else if (selectedEditField === \"github\") {\n            setModule(address, \"github\", input);\n            setGithub(input);\n        } else if (selectedEditField === \"alias\") {\n            setModule(address, \"alias\", input);\n            setAlias(input);\n        } else if (selectedEditField === \"ethereum\") {\n            setModule(address, \"ethereum\", input);\n            setEthereum(input);\n        } else if (selectedEditField === \"website\") {\n            let key = uuid();\n            setModule(address, \"website\", input, key);\n            setWebsites((websites) => websites.concat({ value: input, key: key, type: \"website\" }));\n        } else if (selectedEditField === \"image\") {\n            let key = uuid();\n            setModule(address, \"image\", input, key);\n            setImages((images) => images.concat({ value: input, key: key, type: \"image\" }));\n        } else if (selectedEditField === \"wallet\") {\n            let key = uuid();\n            setModule(address, \"wallet\", input, key);\n            setWallets((wallets) => wallets.concat({ value: input, key: key, type: \"wallet\" }));\n        } else if (selectedEditField === \"linkedin\") {\n            let key = uuid();\n            setModule(address, \"linkedin\", input, key);\n            setLinkedin((linkedin) => linkedin.concat({ value: input, key: key, type: \"linkedin\" }));\n        } else if (selectedEditField === \"dribbble\") {\n            let key = uuid();\n            setModule(address, \"dribbble\", input, key);\n            setDribbble((dribbble) => dribbble.concat({ value: input, key: key, type: \"dribbble\" }));\n        } else if (selectedEditField === \"behance\") {\n            let key = uuid();\n            setModule(address, \"behance\", input, key);\n            setBehance((behance) => behance.concat({ value: input, key: key, type: \"behance\" }));\n        } else if (selectedEditField === \"arena\") {\n            let key = uuid();\n            setModule(address, \"arena\", input, key);\n            setArena((arena) => arena.concat({ value: input, key: key, type: \"arena\" }));\n        } else if (selectedEditField === \"fxhash\") {\n            let key = uuid();\n            setModule(address, \"fxhash\", input, key);\n            setFxhash((fxhash) => fxhash.concat({ value: input, key: key, type: \"fxhash\" }));\n        } else if (selectedEditField === \"versum\") {\n            let key = uuid();\n            setModule(address, \"versum\", input, key);\n            setVersum((versum) => versum.concat({ value: input, key: key, type: \"versum\" }));\n        } else if (selectedEditField === \"teia\") {\n            let key = uuid();\n            setModule(address, \"teia\", input, key);\n            setTeia((teia) => teia.concat({ value: input, key: key, type: \"teia\" }));\n        } else if (selectedEditField === \"objkt\") {\n            let key = uuid();\n            setModule(address, \"objkt\", input, key);\n            setObjkt((objkt) => objkt.concat({ value: input, key: key, type: \"objkt\" }));\n        } else if (selectedEditField === \"zora\") {\n            let key = uuid();\n            setModule(address, \"zora\", input, key);\n            setZora((zora) => zora.concat({ value: input, key: key, type: \"zora\" }));\n        } else if (selectedEditField === \"foundation\") {\n            let key = uuid();\n            setModule(address, \"foundation\", input, key);\n            setFoundation((foundation) => foundation.concat({ value: input, key: key, type: \"foundation\" }));\n        }\n        else if (selectedEditField === \"news\") {\n            let key = uuid();\n            setModule(address, \"news\", input, key);\n            setNews((news) => news.concat({ value: input, key: key, type: \"news\" }));\n        }\n    }\n\n    const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInput(event.target.value)\n    };\n\n    const handleKeyPress = (event) => {\n        if (event.key === \"Enter\") {\n            changeProfile()\n        }\n    };\n\n    const handleChangeInputGoogle = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setGoogleInput(event.target.value)\n    };\n\n    const handleKeyPressGoogle = (event) => {\n        if (event.key === \"Enter\") {\n            googleSearch();\n        }\n    };\n    const handleChange = (event: SelectChangeEvent) => {\n        setSelectedEditField(event.target.value as string);\n\n        if (event.target.value === \"twitter\" && twitter) {\n            setInput(twitter)\n        } else if (event.target.value === \"github\" && github) {\n            setInput(github)\n        } else if (event.target.value === \"alias\" && alias) {\n            setInput(alias)\n        } else if (event.target.value === \"ethereum\" && ethereum) {\n            setInput(ethereum)\n        } else {\n            setInput(inputLabels[event.target.value])\n        }\n    };\n\n    useEffect(() => {\n        //get wallet names for ex. taner.tez\n        async function getDomain(address: string) {\n            let domain;\n            await fetch('https://api.tezos.domains/graphql', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query: `\n            {\n              reverseRecord(address: \"`+ address + `\"){owner domain{name}}\n            }\n            `,\n                    variables: {\n                    },\n                }\n                ),\n            })\n                .then((res) => res.json())\n                .then((result) => {\n                    console.log(result);\n                    if (result.data.reverseRecord) {\n                        domain = result.data.reverseRecord.domain.name;\n                        setUsername(domain);\n                    }\n                });\n        }\n        getDomain(address)\n    }, [address]);\n\n    useEffect(() => {\n        async function fetchGraphQL(operationsDoc, operationName, variables, indexer) {\n            let result = await fetch(indexer, {\n                method: 'POST',\n                body: JSON.stringify({\n                    query: operationsDoc,\n                    variables: variables,\n                    operationName: operationName,\n                }),\n            })\n\n            var ress = await result.json();\n            return ress;\n        }\n\n        async function fetchTezosProfiles(addr) {\n\n            const { errors, data } = await fetchGraphQL(\n                query_profile,\n                'TezosProfiles',\n                { address: addr },\n                'https://indexer.tzprofiles.com/v1/graphql'\n            )\n            if (errors) {\n                console.error(errors)\n            }\n            if (data) {\n                console.log(data);\n\n                if (data.tzprofiles_by_pk) {\n                    if (!twitter && data.tzprofiles_by_pk.twitter) {\n                        setTwitter((twitter) => twitter.concat({ value: data.tzprofiles_by_pk.twitter, type: \"twitter\" }));\n                    }\n                    if (!github && data.tzprofiles_by_pk.github) {\n                        setGithub(data.tzprofiles_by_pk.github)\n                    }\n                    if (!alias && data.tzprofiles_by_pk.alias) {\n                        setAlias(data.tzprofiles_by_pk.alias)\n                    }\n                    if (!ethereum && data.tzprofiles_by_pk.ethereum) {\n                        setEthereum(data.tzprofiles_by_pk.ethereum)\n                    }\n                }\n            }\n        }\n        fetchTezosProfiles(address)\n\n    }, [address, alias, ethereum, github, twitter,]);\n\n\n    useEffect(() => {\n\n        async function fetchSongs(address) {\n            setSongs(await getSpotify(address))\n        }\n        fetchSongs(address);\n\n    }, [address, getSpotify]);\n\n    const googleSearch = async () => {\n        console.log(googleInput)\n\n        //setLoading(true);\n        const res = await getGoogleImages(googleInput);\n        const imageDataWanted = res.map(\n            ({ url, origin }: IResponseDataGoogle) => {\n                const { title } = origin;\n                return {\n                    alt: title,\n                    imageLink: url,\n                    thumbnailLink: url,\n                    id: url\n                };\n            }\n        );\n        console.log(imageDataWanted)\n        //setLoading(false);\n        setGoogleImages(imageDataWanted);\n\n    }\n\n    return (\n        <div >\n            <div className=\"center\">\n                <Avatar\n                    alt=\"Profile Picture\"\n                    src={`https://services.tzkt.io/v1/avatars/${address}`}\n                    style={{ width: 150, height: 150 }}\n                />\n            </div>\n            <div className=\"center\">\n                <b>{alias}</b>\n            </div>\n            <div className=\"center\">\n                <Button\n                    onClick={() => {\n                        navigator.clipboard.writeText(address);\n                        enqueueSnackbar(\n                            <div onClick={() => {\n                                window.open(`https://tzkt.io/${address}/operations`);\n                            }}\n                            > Wallet address coppied, click to view on explorer </div>, {\n                            variant: \"success\",\n                        });\n                    }}\n                >{username}</Button>\n            </div>\n            {account && account.address === address &&\n                <div className=\"center\" style={{ marginBottom: 20 }}>\n                    <Button\n                        variant=\"contained\" color=\"primary\"\n                        onClick={() => { setEditMode(!editMode) }}\n                    >\n                        {editMode ? \"finish edit\" : \"edit\"}\n                    </Button>\n\n                </div>\n            }\n            {loadingModules && <img src={loading} alt={loading} height=\"100%\" />}\n\n            {!editMode && !loadingModules &&\n                <div className=\"modules\" style={{ display: isMobile ? \"grid\" : \"flex\", width: \"99vw\", flexWrap: \"wrap\" }}>\n\n                    {news && news.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\", height: 600, overflow: \"scroll\" }}>\n                            <News query={value} />\n                        </div>\n                    ))\n                    }\n\n\n                    {createdObjkts && createdObjkts.map(({ objkts, wallet }) => (\n                        <div style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\", height: 600, overflow: \"scroll\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <div style={{ textAlign: \"center\" }}> <h3>Created Objkts</h3></div>\n                                <div style={{ textAlign: \"center\" }}> <h3>{wallet}</h3></div>\n\n                                {objkts && objkts.map((token, index) => (\n                                    <div style={{ marginTop: 15 }}>\n                                        <Card variant=\"elevation\" elevation={24}>\n                                            <div style={{ textAlign: \"center\", fontSize: \"1.1em\" }}> <b>{token.name}</b></div>\n                                            <img src={HashToURL(token.display_uri, 'IPFS')} alt={token.name} width=\"100%\" />\n                                            <div style={{ textAlign: \"center\" }}> <b>{token.supply} X </b></div>\n                                            <div style={{ display: \"flex\" }}>\n                                                <div>\n                                                    <b>\n                                                        price: {token.lowest_ask ? ((token.lowest_ask / 1000000) + \"ꜩ\") : \"-\"}\n                                                    </b>\n                                                </div>\n                                                <div style={{ marginLeft: \"auto\" }}>\n                                                    <b>\n                                                        offer: {token.highest_offer ? ((token.highest_offer / 1000000) + \"ꜩ\") : \"-\"}\n                                                    </b>\n                                                </div>\n                                            </div>\n                                        </Card>\n                                    </div>\n                                ))}\n                            </Card>\n                        </div>\n                    ))\n                    }\n                    {ownedObjkts && ownedObjkts.map(({ objkts, wallet }) => (\n                        <div style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\", height: 600, overflow: \"scroll\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <div style={{ textAlign: \"center\" }}> <h3>Owned Objkts</h3></div>\n                                <div style={{ textAlign: \"center\" }}> <h3>{wallet}</h3></div>\n\n                                {objkts && objkts.map((objkt) => (\n                                    <div style={{ marginTop: 15 }}>\n                                        <Card variant=\"elevation\" elevation={24}>\n                                            <div style={{ textAlign: \"center\", fontSize: \"1.1em\" }}> <b>{objkt.token.name}</b></div>\n                                            <img src={HashToURL(objkt.token.display_uri, 'IPFS')} alt={objkt.token.name} width=\"100%\" />\n                                            <div style={{ textAlign: \"center\" }}> <b>{objkt.token.supply} X </b></div>\n                                            <div style={{ display: \"flex\" }}>\n                                                <div>\n                                                    <b>\n                                                        price: {objkt.token.lowest_ask ? ((objkt.token.lowest_ask / 1000000) + \"ꜩ\") : \"-\"}\n                                                    </b>\n                                                </div>\n                                                <div style={{ marginLeft: \"auto\" }}>\n                                                    <b>\n                                                        offer: {objkt.token.highest_offer ? ((objkt.token.highest_offer / 1000000) + \"ꜩ\") : \"-\"}\n                                                    </b>\n                                                </div>\n                                            </div>\n                                        </Card>\n                                    </div>\n                                ))}\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n\n                    {twitter && twitter.map(({ key, value }) => (\n                        value &&\n                        <div key={key} className=\"twitter\" style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n\n                            <Timeline\n                                dataSource={{\n                                    sourceType: 'profile',\n                                    screenName: value\n                                }}\n                                options={{\n                                    width: '100%',\n                                    height: '600'\n                                }}\n                            />\n                        </div>\n                    ))\n                    }\n\n                    {tumblr && tumblr.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n\n                            <Card key={key} variant=\"elevation\" elevation={24}>\n                                <Card variant=\"elevation\" elevation={24}>\n                                    <iframe title={\"tumblr\"} src={`https://${value}.tumblr.com/`} width={\"100%\"} height={600}></iframe>\n                                </Card>\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {ethereum &&\n                        <div style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe src={`https://opensea.io/${ethereum}?embed=true`}\n                                    title=\"opensea\"\n                                    width='100%'\n                                    height='600'\n                                ></iframe>\n                            </Card>\n                        </div>\n                    }\n\n                    {false && linkedin.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <Unfurl url={value} />\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {dribbble && dribbble.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <Unfurl url={value} />\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {behance && behance.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n\n                            <Card variant=\"elevation\" elevation={24}>\n                                <Unfurl url={value} />\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {arena && arena.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe title={\"arena\"} src={value} width={\"100%\"} height={600}></iframe>\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {fxhash && fxhash.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe title={\"fxhash\"} src={value} width={\"100%\"} height={600}></iframe>\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {versum && versum.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe title={\"versum\"} src={value} width={\"100%\"} height={600}></iframe>\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {teia && teia.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe title={\"teia\"} src={value} width={\"100%\"} height={600}></iframe>\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {objkt && objkt.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe title={\"objkt\"} src={value} width={\"100%\"} height={600}></iframe>\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {zora && zora.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n\n                            <Card variant=\"elevation\" elevation={24}>\n                                <Unfurl url={value} />\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {foundation && foundation.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe title={\"foundation\"} src={value} width={\"100%\"} height={600}></iframe>\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {websites && websites.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n\n                            <Card variant=\"elevation\" elevation={24}>\n                                <Unfurl url={value} />\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {images && images.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <img src={value} alt={value} width=\"100%\" />\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {github &&\n                        <div className=\"github\" style={{ width: isMobile ? \"84%\" : \"20%\", height: 260, marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20 }}>\n                            <div style={{ justifyContent: \"center\", alignItems: \"center\", width: \"100%\", display: \"flex\" }}>\n                                <Card variant=\"elevation\" elevation={24}>\n                                    <UserCard username={github} />\n                                </Card>\n                            </div>\n                        </div>\n                    }\n\n\n                    {songs && songs.map(({ song, username, timestamp }) => (\n                        song &&\n                        <div key={timestamp} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n\n                                {typeof song != 'string' &&\n                                    <iframe\n                                        title={timestamp}\n                                        src={`https://open.spotify.com/embed/${song.type}/${song.id}?utm_source=generator`}\n                                        width=\"100%\"\n                                        height=\"152\"\n                                        frameBorder=\"0\"\n\n                                        allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n                                    ></iframe>}\n\n                                {typeof song === 'string' &&\n                                    <iframe\n                                        allow=\"autoplay *; encrypted-media *; fullscreen *\"\n                                        frameBorder=\"0\"\n                                        height=\"150\"\n                                        width=\"100%\"\n                                        sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation\"\n                                        src={song}>\n\n                                    </iframe>\n                                }\n\n                                <div style={{ textAlign: \"center\" }} >\n                                    <Button\n                                        title={timestamp}\n                                        size={\"small\"}\n                                    >\n                                        {username}{\" \"}\n                                    </Button>{\" \"}\n                                </div>\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                </div>\n            }\n\n            {editMode &&\n                <div style={{ marginTop: 30 }}>\n                    <div className=\"center\">\n                        <Grid\n                            container\n                            alignItems=\"center\"\n                            justify=\"center\"\n                        >\n                            <Grid item>\n                                <Select\n                                    variant=\"outlined\"\n                                    value={selectedEditField}\n                                    onChange={handleChange}\n                                >\n                                    <MenuItem value={\"news\"}>+News</MenuItem>\n                                    <MenuItem value={\"wallet\"}>+Wallet</MenuItem>\n                                    <MenuItem value={\"twitter\"}>+Twitter</MenuItem>\n                                    <MenuItem value={\"tumblr\"}>+Tumblr</MenuItem>\n                                    <MenuItem value={\"github\"}>Github</MenuItem>\n                                    <MenuItem value={\"alias\"}>Alias</MenuItem>\n                                    <MenuItem value={\"ethereum\"}>Ethereum</MenuItem>\n                                    <MenuItem value={\"website\"}>+Website</MenuItem>\n                                    <MenuItem value={\"image\"}>+Image</MenuItem>\n                                    <MenuItem value={\"linkedin\"}>+Linkedin</MenuItem>\n                                    <MenuItem value={\"dribbble\"}>+Dribbble</MenuItem>\n                                    <MenuItem value={\"behance\"}>+Behance</MenuItem>\n                                    <MenuItem value={\"arena\"}>+Are.na</MenuItem>\n                                    <MenuItem value={\"fxhash\"}>+fxhash</MenuItem>\n                                    <MenuItem value={\"versum\"}>+Versum</MenuItem>\n                                    <MenuItem value={\"teia\"}>+Teia</MenuItem>\n                                    <MenuItem value={\"objkt\"}>+Objkt</MenuItem>\n                                    <MenuItem value={\"zora\"}>+Zora</MenuItem>\n                                    <MenuItem value={\"foundation\"}>+Foundation</MenuItem>\n                                </Select>\n                            </Grid>\n                            <Grid item>\n                                <TextField id=\"outlined-basic\" label={inputLabels[selectedEditField]} variant=\"outlined\"\n                                    InputLabelProps={{ shrink: true }}\n                                    onChange={handleChangeInput}\n                                    value={input}\n                                    onKeyPress={handleKeyPress}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant=\"contained\" color=\"primary\"\n                                    style={{ marginLeft: 10 }}\n                                    onClick={() => { changeProfile() }}\n                                >\n                                    Post\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </div>\n\n                    {selectedEditField === \"image\" &&\n                        <div className=\"center\" style={{ marginTop: 20 }}>\n\n                            <TextField id=\"outlined-basic\" label={\"Google Search\"} variant=\"outlined\"\n                                onChange={handleChangeInputGoogle}\n                                value={googleInput}\n                                onKeyPress={handleKeyPressGoogle}\n                            />\n                            <Button\n                                variant=\"contained\" color=\"primary\"\n                                style={{ marginLeft: 10 }}\n                                onClick={() => { googleSearch() }}\n                            >\n                                Search\n                            </Button>\n                        </div>\n                    }\n\n                    <br></br>\n                    <br></br>\n                    <div className=\"background-container\" style={{ overflowY: 'auto' }}>\n                        <div className=\"background-icon-list\" >\n                            {googleImages &&\n                                googleImages.map(({ alt, thumbnailLink, imageLink, id }) => (\n                                    <IconButton\n                                        key={id}\n                                        onClick={() =>\n                                            //sendImage(imageLink, isSwitchChecked ? 'background' : 'image')\n                                            //<img src={thumbnailLink} alt={alt} width={\"200\"} />\n                                            // setImage({ alt, thumbnailLink, imageLink, id })\n                                            setInput(imageLink)\n                                        }\n\n                                    >\n                                        <Avatar variant=\"rounded\" src={thumbnailLink} alt={alt} style={{ width: 100, height: 100 }} />\n                                    </IconButton>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"center\" style={{ marginTop: 25 }}><b>auto preview</b> </div>\n                    <div className=\"center\" style={{ marginTop: 5 }}>\n                        {selectedEditField === \"twitter\" &&\n                            <div className=\"twitter\" style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20 }}>\n                                <Card variant=\"outlined\">\n                                    <Timeline\n                                        dataSource={{\n                                            sourceType: 'profile',\n                                            screenName: input\n                                        }}\n                                        options={{\n                                            width: '400',\n                                            height: '600'\n                                        }}\n                                    />\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"tumblr\" &&\n                            <div className=\"tumblr\" >\n                                <Card variant=\"elevation\" elevation={24}>\n                                    <iframe title={\"tumblr\"} src={`https://${input}.tumblr.com/`} width={400} height={600}></iframe>\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"github\" &&\n                            <div className=\"github\" style={{ height: 260, marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20 }}>\n                                <Card variant=\"elevation\" elevation={24}>\n                                    <UserCard key={input} username={input} />\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"alias\" &&\n                            <div style={{ marginTop: 25 }}>\n                                <b>{alias}</b>\n                            </div>\n                        }\n                        {selectedEditField === \"ethereum\" && input &&\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe src={`https://opensea.io/${input}?embed=true`}\n                                    title=\"opensea\"\n                                    width='400'\n                                    height='600'\n\n                                ></iframe>\n                            </Card>\n                        }\n                        {selectedEditField === \"website\" &&\n                            <Card variant=\"elevation\" elevation={24}>\n                                <Unfurl url={input} />\n                            </Card>\n                        }\n                        {selectedEditField === \"image\" &&\n                            <Card variant=\"elevation\" elevation={24}>\n                                <img src={input} alt={input} width=\"100%\" />\n                            </Card>\n                        }\n                    </div>\n                    <div className=\"center\" style={{ marginTop: 25 }}><b>Links</b> </div>\n\n                    <div className=\"center\" style={{ marginTop: 25, fontSize: isMobile ? \"0.5em\" : \"1em\" }}>\n                        <table style={{ width: 400 }}>\n\n                            {wallets && wallets.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Wallet</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"wallet\", \"\", key);\n                                                let index = wallets.findIndex((el) => el.key === key)\n\n                                                setWallets([\n                                                    ...wallets.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...wallets.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n\n                            {twitter && twitter.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Twitter</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"twitter\", \"\", key);\n                                                let index = twitter.findIndex((el) => el.key === key)\n\n                                                setTwitter([\n                                                    ...twitter.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...twitter.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {tumblr && tumblr.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Tumblr</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"tumblr\", \"\", key);\n                                                let index = tumblr.findIndex((el) => el.key === key)\n\n                                                setTumblr([\n                                                    ...tumblr.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...tumblr.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {github && <tr>\n                                <td >Github</td>\n                                <td>{github}</td>\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"github\", \"\");\n                                            setGithub(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>}\n                            {alias && <tr>\n                                <td >Alias</td>\n                                <td>{alias}</td>\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"alias\", \"\");\n                                            setAlias(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>}\n                            {ethereum && <tr>\n                                <td >Ethereum</td>\n                                <td>{ethereum.slice(0, 16) + \"...\" + ethereum.slice(32, 63)}</td>\n\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"ethereum\", \"\");\n                                            setEthereum(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>}\n\n                            {fxhash && fxhash.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >fxhash</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"fxhash\", \"\", key);\n                                                let index = fxhash.findIndex((el) => el.key === key)\n\n                                                setFxhash([\n                                                    ...fxhash.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...fxhash.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {websites && websites.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Website</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"website\", \"\", key);\n                                                let index = websites.findIndex((el) => el.key === key)\n\n                                                setWebsites([\n                                                    ...websites.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...websites.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {images && images.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Image</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"image\", \"\", key);\n                                                let index = images.findIndex((el) => el.key === key)\n\n                                                setImages([\n                                                    ...images.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...images.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                            {linkedin && linkedin.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Linkedin</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"linkedin\", \"\", key);\n                                                let index = linkedin.findIndex((el) => el.key === key)\n\n                                                setLinkedin([\n                                                    ...linkedin.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...linkedin.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {dribbble && dribbble.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Dribbble</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"dribbble\", \"\", key);\n                                                let index = dribbble.findIndex((el) => el.key === key)\n\n                                                setDribbble([\n                                                    ...dribbble.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...dribbble.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {behance && behance.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Behance</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"behance\", \"\", key);\n                                                let index = behance.findIndex((el) => el.key === key)\n\n                                                setBehance([\n                                                    ...behance.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...behance.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {arena && arena.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Are.na</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"arena\", \"\", key);\n                                                let index = arena.findIndex((el) => el.key === key)\n\n                                                setArena([\n                                                    ...arena.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...arena.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {versum && versum.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Versum</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"versum\", \"\", key);\n                                                let index = versum.findIndex((el) => el.key === key)\n\n                                                setVersum([\n                                                    ...versum.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...versum.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {teia && teia.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Teia</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"teia\", \"\", key);\n                                                let index = teia.findIndex((el) => el.key === key)\n\n                                                setTeia([\n                                                    ...teia.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...teia.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {objkt && objkt.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Objkt</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"objkt\", \"\", key);\n                                                let index = objkt.findIndex((el) => el.key === key)\n\n                                                setObjkt([\n                                                    ...objkt.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...objkt.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                            {zora && zora.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Zora</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"zora\", \"\", key);\n                                                let index = zora.findIndex((el) => el.key === key)\n\n                                                setZora([\n                                                    ...zora.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...zora.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                            {foundation && foundation.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Foundation</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"foundation\", \"\", key);\n                                                let index = foundation.findIndex((el) => el.key === key)\n\n                                                setFoundation([\n                                                    ...foundation.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...foundation.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                            {news && news.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >News</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"news\", \"\", key);\n                                                let index = news.findIndex((el) => el.key === key)\n\n                                                setNews([\n                                                    ...news.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...news.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </table>\n\n                    </div>\n\n                </div>\n            }\n        </div >\n    );\n\n};\n\nconst query_profile = `\nquery TezosProfiles($address: String!){ \n    tzprofiles_by_pk(account: $address) \n    { \n      account,\n      discord,\n      twitter,\n      github,\n      ethereum,\n      domain_name,\n      logo,\n  alias,\n      website,\n      description,\n          valid_claims,\n  \n    } \n  }\n`\n\n\nconst HashToURL = (hash, type) => {\n    // when on preview the hash might be undefined.\n    // its safe to return empty string as whatever called HashToURL is not going to be used\n    // artifactUri or displayUri\n    if (hash) {\n        switch (type) {\n            case 'HIC':\n                return hash.replace('ipfs://', 'https://pinata.hicetnunc.xyz/ipfs/')\n            case 'CLOUDFLARE':\n                return hash.replace('ipfs://', 'https://cloudflare-ipfs.com/ipfs/')\n            case 'PINATA':\n                return hash.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/')\n            case 'IPFS':\n                return hash.replace('ipfs://', 'https://ipfs.io/ipfs/')\n            case 'INFURA':\n                try {\n                    var cidv1 = new ipfsClient.CID(hash.replace('ipfs://', '')).toV1()\n                    var subdomain = cidv1.toBaseEncodedString('base32')\n                    return `https://${subdomain}.ipfs.infura-ipfs.io/`\n                } catch (err) {\n                    return undefined\n                }\n            case 'DWEB':\n                return hash.replace('ipfs://', 'http://dweb.link/ipfs/')\n            default:\n                console.error('please specify type')\n                return hash\n        }\n    }\n}","// @ts-nocheck\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\n\n//ui\nimport { Button } from \"@material-ui/core\";\n\n//logic\nimport { DAppClient } from \"@airgap/beacon-sdk\";\n//import _ from \"underscore\";\n//import { FirebaseContext } from \"./firebaseContext\";\nimport { Profile } from './components/profile';\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\n\n\nfunction App() {\n  const navigate = useNavigate();\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n  const [address, setAddress] = useState();\n\n\n\n  useEffect(() => {\n    async function getAddress() {\n      console.log(new URL(window.location.href).searchParams.get('profile'))\n      let profileAddress = new URL(window.location.href).searchParams.get('profile');\n      //setAddress(profileAddress);\n\n      if (!(profileAddress && profileAddress.includes(\".tez\"))) {\n        setAddress(profileAddress);\n      }\n      else if (profileAddress) {\n\n        await fetch('https://api.tezos.domains/graphql', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            query: `\n                {\n                  domain(name: \"` + profileAddress + `\") {\n                    name\n                    address\n                  }\n                }\n                `,\n            variables: {\n            },\n          }\n          ),\n        })\n          .then((res) => res.json())\n          .then((result) => {\n            console.log(result);\n            if (result.data.domain) {\n              setAddress(result.data.domain.address);\n            }\n          });\n      }\n    }\n    getAddress();\n  }, [setAddress]);\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n        if (!address) {\n          navigate(\"/?profile=\" + activeAccount.address);\n        }\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n      if (!address) {\n        navigate(\"/?profile=\" + activeAccount.address);\n      }\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n        navigate(\"/?profile=\" + permissions.address);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  return (\n    <div\n\n    >\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          margin: 6,\n          fontFamily: \"CaviarDreams\",\n        }}\n      >\n        <b>Profile Assemblr </b>\n      </div>\n\n      {!showUnsync &&\n        <div>\n\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            welcome sync and explore\n          </div>\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            profile search module\n          </div>\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            display random profile\n          </div>\n        </div>\n      }\n      {\n        (address || activeAccount) &&\n        <Profile\n          key={activeAccount + address}\n          address={address ? address : activeAccount.address}\n          account={activeAccount}\n        />\n      }\n\n      <div\n        className=\"top-right\"\n        style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\" }}\n      >\n        {showUnsync && (\n          <Button\n            size={\"small\"}\n            title={\"unsync\"}\n            onClick={() => {\n              unsync();\n            }}\n          >\n            <u>unsync</u>{\" \"}\n          </Button>\n        )}\n\n        {showUnsync && <div> | </div>}\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            if (!showUnsync) {\n              await sync();\n            } else {\n              navigate(\"/?profile=\" + activeAccount.address);\n              setAddress(activeAccount.address);\n            }\n          }}\n        >\n          <u>{synced}</u>{\" \"}\n        </Button>\n      </div>\n\n      <div\n        className=\"bottom\"\n        style={{ position: \"sticky\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", backgroundColor: \"white\", width: \"100%\" }}\n      >\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            window.open(\"https://adventurenetworks.net/#/\", \"_blank\");\n          }}\n        >\n          <u>Adventure Network</u>{\" \"}\n        </Button>\n\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            window.open(\"https://trydrum.net/\", \"_blank\");\n          }}\n        >\n          <u> 🥁 TryDrum ! 🥁</u>{\" \"}\n        </Button>\n\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            window.open(\"https://metaverses.fyi/#/\", \"_blank\");\n          }}\n        >\n          <u> 🤯 Metaverses.fyi 🤯 </u>{\" \"}\n        </Button>\n\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            window.open(\"https://peopleparty.xyz/\", \"_blank\");\n          }}\n        >\n          <u> 🎈 People Party 🥳 </u>{\" \"}\n        </Button>\n\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            window.open(\"https://elementals.run/\", \"_blank\");\n          }}\n        >\n          <u> 💥 Elementals.run 🤛 </u>{\" \"}\n        </Button>\n\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            window.open(\"https://network1.cc/\", \"_blank\");\n          }}\n        >\n          <u> 📠 Network 1 🎨 </u>{\" \"}\n        </Button>\n\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            window.open(\"https://adventurepizza.github.io/Network2/\", \"_blank\");\n          }}\n        >\n          <u> 📠 Network 2 🙃 </u>{\" \"}\n        </Button>\n\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            window.open(\"https://adventurepizza.github.io/Network3/\", \"_blank\");\n          }}\n        >\n          <u> 📠 Network 3 🎸 </u>{\" \"}\n        </Button>\n\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            window.open(\"https://adventurepizza.github.io/Network4/\", \"_blank\");\n          }}\n        >\n          <u> 📠 Network 4 🎹 </u>{\" \"}\n        </Button>\n\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            window.open(\"https://asknetwork.xyz/\", \"_blank\");\n          }}\n        >\n          <u> 📠 Network 5 🖼️ </u>{\" \"}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <FirebaseProvider>\n      <SnackbarProvider maxSnack={3}>\n        <App />\n      </SnackbarProvider>\n    </FirebaseProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}