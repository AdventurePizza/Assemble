{"version":3,"sources":["firebaseContext.tsx","components/profile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","setModule","Promise","resolve","isSuccessful","getModules","getObjkts","getGoogleImages","getSpotify","fetchBase","FirebaseProvider","children","useCallback","address","module","value","key","a","fetch","method","headers","body","JSON","stringify","fetchRes","ok","message","statusText","json","query","Provider","Profile","account","enqueueSnackbar","useSnackbar","useContext","useState","slice","username","setUsername","isMobile","window","innerWidth","editMode","setEditMode","selectedEditField","setSelectedEditField","inputLabels","input","setInput","twitter","setTwitter","tumblr","setTumblr","github","setGithub","alias","setAlias","ethereum","setEthereum","createdObjkts","setCreatedObjkts","ownedObjkts","setOwnedObjkts","websites","setWebsites","images","setImages","googleInput","setGoogleInput","googleImages","setGoogleImages","songs","setSongs","wallets","setWallets","linkedin","setLinkedin","dribbble","setDribbble","changeProfile","uuid","concat","type","useEffect","modules","tempWebsites","tempImages","tempWallets","tempTumblr","tempTwitter","tempDribbble","forEach","push","console","log","tempCreatedCollections","tempOwnedCollections","i","length","results","objkts","created","token","wallet","owned","token_holder","fetchModules","variables","then","res","result","data","reverseRecord","domain","name","getDomain","fetchGraphQL","operationsDoc","operationName","indexer","ress","addr","query_profile","errors","error","tzprofiles_by_pk","fetchTezosProfiles","fetchSongs","googleSearch","imageDataWanted","map","url","alt","origin","title","imageLink","thumbnailLink","id","className","Avatar","src","style","width","height","Button","onClick","navigator","clipboard","writeText","open","variant","marginBottom","color","display","flexWrap","marginInline","marginBlock","overflow","Card","elevation","textAlign","index","marginTop","fontSize","HashToURL","display_uri","supply","lowest_ask","marginLeft","highest_offer","objkt","dataSource","sourceType","screenName","options","descriptionLength","imageHeight","showLoader","justifyContent","alignItems","song","timestamp","frameBorder","allow","size","Grid","container","justify","item","Select","onChange","event","target","MenuItem","TextField","label","InputLabelProps","shrink","onKeyPress","overflowY","IconButton","findIndex","el","hash","replace","subdomain","ipfsClient","CID","toV1","toBaseEncodedString","err","dAppClient","DAppClient","App","navigate","useNavigate","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","setAddress","getActiveAccount","clearActiveAccount","sync","requestPermissions","permissions","URL","location","href","searchParams","get","profileAddress","includes","getAddress","getAcc","margin","fontFamily","position","unsync","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.de980b62.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\nexport interface IFirebaseContext {\n  setModule: (address, module, value, key) => Promise<IFetchResponseBase>;\n  getModules: (address) => Promise<IFetchResponseBase>;\n  getObjkts: (address) => Promise<IFetchResponseBase>;\n  getGoogleImages: (query) => Promise<IFetchResponseBase>;\n  getSpotify: (address) => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  setModule: () => Promise.resolve({ isSuccessful: false }),\n  getModules: () => Promise.resolve({ isSuccessful: false }),\n  getObjkts: () => Promise.resolve({ isSuccessful: false }),\n  getGoogleImages: () => Promise.resolve({ isSuccessful: false }),\n  getSpotify: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://assemble-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n\n  const setModule = useCallback(\n    async (address, module, value, key): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/module`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ address: address, module: module, value: value, key: key }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getModules =\n    useCallback(async (address): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/modules/${address}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n\n  const getObjkts =\n    useCallback(async (address): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/objkts/${address}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const getGoogleImages =\n    useCallback(async (query): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/search/${query}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const getSpotify =\n    useCallback(async (address): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/spotify/${address}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        setModule,\n        getModules,\n        getObjkts,\n        getGoogleImages,\n        getSpotify\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","// @ts-nocheck\nimport React, { useEffect, useState, useContext } from 'react'\nimport { Grid, Button, Avatar, Card, Select, MenuItem, TextField, IconButton } from \"@material-ui/core\";\nimport \"./profile.css\";\nimport { useSnackbar } from \"notistack\";\nimport { Timeline } from 'react-twitter-widgets'\nimport { FirebaseContext } from \"../firebaseContext\";\nimport { LinkPreview } from '@dhaiwat10/react-link-preview';\nimport { UserCard } from 'react-github-cards/dist/medium'\nimport 'react-github-cards/dist/medium.css';\nimport { uuid } from 'uuidv4';\n\nexport const Profile = (\n    { address, account }\n) => {\n    const { enqueueSnackbar } = useSnackbar();\n    const { getModules, setModule, getObjkts, getGoogleImages, getSpotify } = useContext(FirebaseContext);\n    const [username, setUsername] = useState(address.slice(0, 6) + \"...\" + address.slice(32, 36));\n    const isMobile = window.innerWidth <= 500;\n    const [editMode, setEditMode] = useState(false);\n    const [selectedEditField, setSelectedEditField] = React.useState(\"twitter\");\n    const inputLabels = {\n        \"twitter\": \"adventurecorpp\",\n        \"tumblr\": \"tezos\",\n        \"github\": \"tanerdurmaz\",\n        \"alias\": \"nickname\",\n        \"ethereum wallet\": \"0x4bA9285EDE9D46Bc367ee1d5cD5a8F1d9e6572e6\",\n        \"website\": \"https://adventurenetworks.net/\",\n        \"image\": \"https://picsum.photos/300\",\n        \"linkedin\": \"https://www.linkedin.com/company/adventurenetworks\",\n        \"dribbble\": \"https://dribbble.com/SQUARESPACE\"\n    };\n    const [input, setInput] = useState();\n\n    //profile modules\n    const [twitter, setTwitter] = useState([]);\n    const [tumblr, setTumblr] = useState([]);\n    const [github, setGithub] = useState();\n    const [alias, setAlias] = useState();\n    const [ethereum, setEthereum] = useState();\n    const [createdObjkts, setCreatedObjkts] = useState();\n    const [ownedObjkts, setOwnedObjkts] = useState();\n    const [websites, setWebsites] = useState();\n    const [images, setImages] = useState();\n    const [googleInput, setGoogleInput] = useState();\n    const [googleImages, setGoogleImages] = useState();\n    const [songs, setSongs] = useState();\n    const [wallets, setWallets] = useState();\n    const [linkedin, setLinkedin] = useState();\n    const [dribbble, setDribbble] = useState([]);\n\n    useEffect(() => {\n        async function fetchModules() {\n            let modules = await getModules(address);\n            let tempWebsites = [];\n            let tempImages = [];\n            let tempWallets = [{ key: \"user wallet\", type: \"wallet\", value: address }];\n            let tempTumblr = [];\n            let tempTwitter = [];\n            let tempDribbble = [];\n\n            if (modules) {\n                modules.forEach(module => {\n                    if (module.type === \"twitter\") {\n                        tempTwitter.push(module);\n                    } else if (module.type === \"tumblr\") {\n                        tempTumblr.push(module);\n                    } else if (module.type === \"github\") {\n                        setGithub(module.value);\n                    }\n                    else if (module.type === \"alias\") {\n                        setAlias(module.value);\n                    }\n                    else if (module.type === \"ethereum\") {\n                        setEthereum(module.value);\n                    }\n                    else if (module.type === \"website\") {\n                        tempWebsites.push(module)\n                    }\n                    else if (module.type === \"image\") {\n                        tempImages.push(module)\n                    }\n                    else if (module.type === \"wallet\") {\n                        tempWallets.push(module)\n                    }\n                    else if (module.type === \"linkedin\") {\n                        setLinkedin(module.value);\n                    }\n                    else if (module.type === \"dribbble\") {\n                        tempDribbble.push(module);\n                    }\n                    setWebsites(tempWebsites);\n                    setImages(tempImages);\n                    setWallets(tempWallets);\n                    setTumblr(tempTumblr);\n                    setTwitter(tempTwitter);\n                    setDribbble(tempDribbble);\n\n                    console.log(modules)\n                });\n            }\n\n            let tempCreatedCollections = [];\n            let tempOwnedCollections = [];\n            if (tempWallets) {\n                for (let i = 0; i < tempWallets.length; i++) {\n                    if (tempWallets[i].value) {\n                        let results = await getObjkts(tempWallets[i].value);\n                        if (results) {\n                            tempCreatedCollections.push({ objkts: results.created.token, wallet: tempWallets[i].value })\n                            tempOwnedCollections.push({ objkts: results.owned.token_holder, wallet: tempWallets[i].value })\n                        }\n                    }\n                }\n                setCreatedObjkts(tempCreatedCollections)\n                setOwnedObjkts(tempOwnedCollections)\n            }\n        }\n\n        fetchModules();\n    }, [getModules, setModule, address, getObjkts]);\n\n    function changeProfile() {\n        //set\n        //notify\n        if (selectedEditField === \"twitter\") {\n            let key = uuid();\n            setModule(address, \"twitter\", input, key);\n            setTwitter((twitter) => twitter.concat({ value: input, key: key, type: \"twitter\" }));\n        } else if (selectedEditField === \"tumblr\") {\n            let key = uuid();\n            setModule(address, \"tumblr\", input, key);\n            setTumblr((tumblr) => tumblr.concat({ value: input, key: key, type: \"tumblr\" }));\n        } else if (selectedEditField === \"github\") {\n            setModule(address, \"github\", input);\n            setGithub(input);\n        } else if (selectedEditField === \"alias\") {\n            setModule(address, \"alias\", input);\n            setAlias(input);\n        } else if (selectedEditField === \"ethereum\") {\n            setModule(address, \"ethereum\", input);\n            setEthereum(input);\n        } else if (selectedEditField === \"website\") {\n            let key = uuid();\n            setModule(address, \"website\", input, key);\n            setWebsites((websites) => websites.concat({ value: input, key: key, type: \"website\" }));\n        } else if (selectedEditField === \"image\") {\n            let key = uuid();\n            setModule(address, \"image\", input, key);\n            setImages((images) => images.concat({ value: input, key: key, type: \"image\" }));\n        } else if (selectedEditField === \"wallet\") {\n            let key = uuid();\n            setModule(address, \"wallet\", input, key);\n            setWallets((wallets) => wallets.concat({ value: input, key: key, type: \"wallet\" }));\n        } else if (selectedEditField === \"linkedin\") {\n            setModule(address, \"linkedin\", input);\n            setLinkedin(input);\n        } else if (selectedEditField === \"dribbble\") {\n            let key = uuid();\n            setModule(address, \"dribbble\", input, key);\n            setDribbble((wallets) => wallets.concat({ value: input, key: key, type: \"dribbble\" }));\n        }\n    }\n\n    const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInput(event.target.value)\n    };\n\n    const handleKeyPress = (event) => {\n        if (event.key === \"Enter\") {\n            changeProfile()\n        }\n    };\n\n    const handleChangeInputGoogle = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setGoogleInput(event.target.value)\n    };\n\n    const handleKeyPressGoogle = (event) => {\n        if (event.key === \"Enter\") {\n            googleSearch();\n        }\n    };\n    const handleChange = (event: SelectChangeEvent) => {\n        setSelectedEditField(event.target.value as string);\n\n        if (event.target.value === \"twitter\" && twitter) {\n            setInput(twitter)\n        } else if (event.target.value === \"github\" && github) {\n            setInput(github)\n        } else if (event.target.value === \"alias\" && alias) {\n            setInput(alias)\n        } else if (event.target.value === \"ethereum\" && ethereum) {\n            setInput(ethereum)\n        } else {\n            setInput(inputLabels[event.target.value])\n        }\n    };\n\n    useEffect(() => {\n        //get wallet names for ex. taner.tez\n        async function getDomain(address: string) {\n            let domain;\n            await fetch('https://api.tezos.domains/graphql', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query: `\n            {\n              reverseRecord(address: \"`+ address + `\"){owner domain{name}}\n            }\n            `,\n                    variables: {\n                    },\n                }\n                ),\n            })\n                .then((res) => res.json())\n                .then((result) => {\n                    console.log(result);\n                    if (result.data.reverseRecord) {\n                        domain = result.data.reverseRecord.domain.name;\n                        setUsername(domain);\n                    }\n                });\n        }\n        getDomain(address)\n    }, [address]);\n\n    useEffect(() => {\n        async function fetchGraphQL(operationsDoc, operationName, variables, indexer) {\n            let result = await fetch(indexer, {\n                method: 'POST',\n                body: JSON.stringify({\n                    query: operationsDoc,\n                    variables: variables,\n                    operationName: operationName,\n                }),\n            })\n\n            var ress = await result.json();\n            return ress;\n        }\n\n        async function fetchTezosProfiles(addr) {\n\n            const { errors, data } = await fetchGraphQL(\n                query_profile,\n                'TezosProfiles',\n                { address: addr },\n                'https://indexer.tzprofiles.com/v1/graphql'\n            )\n            if (errors) {\n                console.error(errors)\n            }\n            if (data) {\n                console.log(data);\n\n                if (data.tzprofiles_by_pk) {\n                    if (!twitter && data.tzprofiles_by_pk.twitter) {\n                        setTwitter((twitter) => twitter.concat({ value: data.tzprofiles_by_pk.twitter, type: \"twitter\" }));\n                    }\n                    if (!github && data.tzprofiles_by_pk.github) {\n                        setGithub(data.tzprofiles_by_pk.github)\n                    }\n                    if (!alias && data.tzprofiles_by_pk.alias) {\n                        setAlias(data.tzprofiles_by_pk.alias)\n                    }\n                    if (!ethereum && data.tzprofiles_by_pk.ethereum) {\n                        setEthereum(data.tzprofiles_by_pk.ethereum)\n                    }\n                }\n            }\n        }\n        fetchTezosProfiles(address)\n\n    }, [address, alias, ethereum, github, twitter,]);\n\n\n    useEffect(() => {\n\n        async function fetchSongs(address) {\n            setSongs(await getSpotify(address))\n        }\n        fetchSongs(address);\n\n    }, [address, getSpotify]);\n\n    const googleSearch = async () => {\n        console.log(googleInput)\n\n        //setLoading(true);\n        const res = await getGoogleImages(googleInput);\n\n        const imageDataWanted = res.map(\n            ({ url, origin }: IResponseDataGoogle) => {\n                const { title } = origin;\n                return {\n                    alt: title,\n                    imageLink: url,\n                    thumbnailLink: url,\n                    id: url\n                };\n            }\n        );\n        console.log(imageDataWanted)\n        //setLoading(false);\n        setGoogleImages(imageDataWanted);\n\n    }\n\n    return (\n        <div >\n            <div className=\"center\">\n                <Avatar\n                    alt=\"Profile Picture\"\n                    src={`https://services.tzkt.io/v1/avatars/${address}`}\n                    style={{ width: 150, height: 150 }}\n                />\n            </div>\n            <div className=\"center\">\n                <b>{alias}</b>\n            </div>\n            <div className=\"center\">\n                <Button\n                    onClick={() => {\n                        navigator.clipboard.writeText(address);\n                        enqueueSnackbar(\n                            <div onClick={() => {\n                                window.open(`https://tzkt.io/${address}/operations`);\n                            }}\n                            > Wallet address coppied, click to view on explorer </div>, {\n                            variant: \"success\",\n                        });\n                    }}\n                >{username}</Button>\n            </div>\n            {account && account.address === address &&\n                <div className=\"center\" style={{ marginBottom: 20 }}>\n                    <Button\n                        variant=\"contained\" color=\"primary\"\n                        onClick={() => { setEditMode(!editMode) }}\n                    >\n                        {editMode ? \"finish edit\" : \"edit\"}\n                    </Button>\n\n                </div>\n            }\n\n            {!editMode &&\n                <div className=\"modules\" style={{ display: isMobile ? \"grid\" : \"flex\", width: \"100vw\", flexWrap: \"wrap\" }}>\n\n\n                    {createdObjkts && createdObjkts.map(({ objkts, wallet }) => (\n                        <div style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\", height: 600, overflow: \"scroll\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <div style={{ textAlign: \"center\" }}> <h3>Created Objkts</h3></div>\n                                <div style={{ textAlign: \"center\" }}> <h3>{wallet}</h3></div>\n\n                                {objkts && objkts.map((token, index) => (\n                                    <div style={{ marginTop: 15 }}>\n                                        <Card variant=\"elevation\" elevation={24}>\n                                            <div style={{ textAlign: \"center\", fontSize: \"1.1em\" }}> <b>{token.name}</b></div>\n                                            <img src={HashToURL(token.display_uri, 'IPFS')} alt={token.name} width=\"100%\" />\n                                            <div style={{ textAlign: \"center\" }}> <b>{token.supply} X </b></div>\n                                            <div style={{ display: \"flex\" }}>\n                                                <div>\n                                                    <b>\n                                                        price: {token.lowest_ask ? ((token.lowest_ask / 1000000) + \"ꜩ\") : \"-\"}\n                                                    </b>\n                                                </div>\n                                                <div style={{ marginLeft: \"auto\" }}>\n                                                    <b>\n                                                        offer: {token.highest_offer ? ((token.highest_offer / 1000000) + \"ꜩ\") : \"-\"}\n                                                    </b>\n                                                </div>\n                                            </div>\n                                        </Card>\n                                    </div>\n                                ))}\n                            </Card>\n                        </div>\n                    ))\n                    }\n                    {ownedObjkts && ownedObjkts.map(({ objkts, wallet }) => (\n                        <div style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\", height: 600, overflow: \"scroll\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <div style={{ textAlign: \"center\" }}> <h3>Owned Objkts</h3></div>\n                                <div style={{ textAlign: \"center\" }}> <h3>{wallet}</h3></div>\n\n                                {objkts && objkts.map((objkt) => (\n                                    <div style={{ marginTop: 15 }}>\n                                        <Card variant=\"elevation\" elevation={24}>\n                                            <div style={{ textAlign: \"center\", fontSize: \"1.1em\" }}> <b>{objkt.token.name}</b></div>\n                                            <img src={HashToURL(objkt.token.display_uri, 'IPFS')} alt={objkt.token.name} width=\"100%\" />\n                                            <div style={{ textAlign: \"center\" }}> <b>{objkt.token.supply} X </b></div>\n                                            <div style={{ display: \"flex\" }}>\n                                                <div>\n                                                    <b>\n                                                        price: {objkt.token.lowest_ask ? ((objkt.token.lowest_ask / 1000000) + \"ꜩ\") : \"-\"}\n                                                    </b>\n                                                </div>\n                                                <div style={{ marginLeft: \"auto\" }}>\n                                                    <b>\n                                                        offer: {objkt.token.highest_offer ? ((objkt.token.highest_offer / 1000000) + \"ꜩ\") : \"-\"}\n                                                    </b>\n                                                </div>\n                                            </div>\n                                        </Card>\n                                    </div>\n                                ))}\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n\n                    {twitter && twitter.map(({ key, value }) => (\n                        value &&\n                        <div key={key} className=\"twitter\" style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n\n                            <Timeline\n                                dataSource={{\n                                    sourceType: 'profile',\n                                    screenName: value\n                                }}\n                                options={{\n                                    width: '100%',\n                                    height: '600'\n                                }}\n                            />\n                        </div>\n                    ))\n                    }\n\n                    {tumblr && tumblr.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n\n                            <Card key={key} variant=\"elevation\" elevation={24}>\n                                <Card variant=\"elevation\" elevation={24}>\n                                    <iframe title={\"tumblr\"} src={`https://${value}.tumblr.com/`} width={\"100%\"} height={600}></iframe>\n                                </Card>\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {ethereum &&\n                        <div style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe src={`https://opensea.io/${ethereum}?embed=true`}\n                                    title=\"opensea\"\n                                    width='100%'\n                                    height='600'\n                                ></iframe>\n                            </Card>\n                        </div>\n                    }\n\n                    {linkedin &&\n                        <div style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n\n                            <Card variant=\"elevation\" elevation={24}>\n                                <LinkPreview\n                                    url={linkedin}\n                                    //fallback={noLinkPrev}\n                                    descriptionLength={50}\n                                    imageHeight={300}\n                                    showLoader={true}\n                                />\n                            </Card>\n                        </div>\n                    }\n\n\n                    {dribbble && dribbble.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n\n                            <Card variant=\"elevation\" elevation={24}>\n                                <LinkPreview\n                                    url={value}\n                                    //fallback={noLinkPrev}\n                                    descriptionLength={50}\n                                    imageHeight={300}\n                                    showLoader={true}\n                                />\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {websites && websites.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n\n                            <Card variant=\"elevation\" elevation={24}>\n                                <LinkPreview\n                                    url={value}\n                                    //fallback={noLinkPrev}\n                                    descriptionLength={50}\n                                    imageHeight={300}\n                                    showLoader={true}\n                                />\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {images && images.map(({ key, value }) => (\n                        value &&\n                        <div key={key} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <img src={value} alt={value} width=\"100%\" />\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                    {github &&\n                        <div className=\"github\" style={{ width: isMobile ? \"84%\" : \"20%\", height: 260, marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20 }}>\n                            <div style={{ justifyContent: \"center\", alignItems: \"center\", width: \"100%\", display: \"flex\" }}>\n                                <Card variant=\"elevation\" elevation={24}>\n                                    <UserCard username={github} />\n                                </Card>\n                            </div>\n                        </div>\n                    }\n\n\n                    {songs && songs.map(({ song, username, timestamp }) => (\n                        <div key={timestamp} style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20, width: isMobile ? \"84%\" : \"20%\" }}>\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe\n                                    title={timestamp}\n                                    src={`https://open.spotify.com/embed/${song.type}/${song.id}?utm_source=generator`}\n                                    width=\"100%\"\n                                    height=\"152\"\n                                    frameBorder=\"0\"\n\n                                    allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n                                ></iframe>\n                                <div style={{ textAlign: \"center\" }} >\n                                    <Button\n                                        title={timestamp}\n                                        size={\"small\"}\n                                    >\n                                        {username}{\" \"}\n                                    </Button>{\" \"}\n                                </div>\n                            </Card>\n                        </div>\n                    ))\n                    }\n\n                </div>\n            }\n\n            {editMode &&\n                <div style={{ marginTop: 30 }}>\n                    <div className=\"center\">\n                        <Grid\n                            container\n                            alignItems=\"center\"\n                            justify=\"center\"\n                        >\n                            <Grid item>\n                                <Select\n                                    variant=\"outlined\"\n                                    value={selectedEditField}\n                                    onChange={handleChange}\n                                >\n                                    <MenuItem value={\"wallet\"}>+Wallet</MenuItem>\n                                    <MenuItem value={\"twitter\"}>+Twitter</MenuItem>\n                                    <MenuItem value={\"tumblr\"}>+Tumblr</MenuItem>\n                                    <MenuItem value={\"github\"}>Github</MenuItem>\n                                    <MenuItem value={\"alias\"}>Alias</MenuItem>\n                                    <MenuItem value={\"ethereum\"}>Ethereum</MenuItem>\n                                    <MenuItem value={\"website\"}>+Website</MenuItem>\n                                    <MenuItem value={\"image\"}>+Image</MenuItem>\n                                    <MenuItem value={\"linkedin\"}>Linkedin</MenuItem>\n                                    <MenuItem value={\"dribbble\"}>+Dribbble</MenuItem>\n                                </Select>\n                            </Grid>\n                            <Grid item>\n                                <TextField id=\"outlined-basic\" label={inputLabels[selectedEditField]} variant=\"outlined\"\n                                    InputLabelProps={{ shrink: true }}\n                                    onChange={handleChangeInput}\n                                    value={input}\n                                    onKeyPress={handleKeyPress}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant=\"contained\" color=\"primary\"\n                                    style={{ marginLeft: 10 }}\n                                    onClick={() => { changeProfile() }}\n                                >\n                                    Post\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </div>\n\n                    {selectedEditField === \"image\" &&\n                        <div className=\"center\" style={{ marginTop: 20 }}>\n\n                            <TextField id=\"outlined-basic\" label={\"Google Search\"} variant=\"outlined\"\n                                onChange={handleChangeInputGoogle}\n                                value={googleInput}\n                                onKeyPress={handleKeyPressGoogle}\n                            />\n                            <Button\n                                variant=\"contained\" color=\"primary\"\n                                style={{ marginLeft: 10 }}\n                                onClick={() => { googleSearch() }}\n                            >\n                                Search\n                            </Button>\n                        </div>\n                    }\n\n                    <br></br>\n                    <br></br>\n                    <div className=\"background-container\" style={{ overflowY: 'auto' }}>\n                        <div className=\"background-icon-list\" >\n                            {googleImages &&\n                                googleImages.map(({ alt, thumbnailLink, imageLink, id }) => (\n                                    <IconButton\n                                        key={id}\n                                        onClick={() =>\n                                            //sendImage(imageLink, isSwitchChecked ? 'background' : 'image')\n                                            //<img src={thumbnailLink} alt={alt} width={\"200\"} />\n                                            // setImage({ alt, thumbnailLink, imageLink, id })\n                                            setInput(imageLink)\n                                        }\n\n                                    >\n                                        <Avatar variant=\"rounded\" src={thumbnailLink} alt={alt} style={{ width: 100, height: 100 }} />\n                                    </IconButton>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"center\" style={{ marginTop: 25 }}><b>auto preview</b> </div>\n                    <div className=\"center\" style={{ marginTop: 5 }}>\n                        {selectedEditField === \"twitter\" &&\n                            <div className=\"twitter\" style={{ marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20 }}>\n                                <Card variant=\"outlined\">\n                                    <Timeline\n                                        dataSource={{\n                                            sourceType: 'profile',\n                                            screenName: input\n                                        }}\n                                        options={{\n                                            width: '400',\n                                            height: '600'\n                                        }}\n                                    />\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"tumblr\" &&\n                            <div className=\"tumblr\" >\n                                <Card variant=\"elevation\" elevation={24}>\n                                    <iframe title={\"tumblr\"} src={`https://${input}.tumblr.com/`} width={400} height={600}></iframe>\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"github\" &&\n                            <div className=\"github\" style={{ height: 260, marginInline: isMobile ? \"auto\" : 45, marginBlock: isMobile ? 15 : 20 }}>\n                                <Card variant=\"elevation\" elevation={24}>\n                                    <UserCard key={input} username={input} />\n                                </Card>\n                            </div>\n                        }\n\n                        {selectedEditField === \"alias\" &&\n                            <div style={{ marginTop: 25 }}>\n                                <b>{alias}</b>\n                            </div>\n                        }\n                        {selectedEditField === \"ethereum\" && input &&\n                            <Card variant=\"elevation\" elevation={24}>\n                                <iframe src={`https://opensea.io/${input}?embed=true`}\n                                    title=\"opensea\"\n                                    width='400'\n                                    height='600'\n\n                                ></iframe>\n                            </Card>\n                        }\n                        {selectedEditField === \"website\" &&\n                            <Card variant=\"elevation\" elevation={24}>\n                                <LinkPreview\n\n                                    url={input}\n                                    //fallback={noLinkPrev}\n                                    descriptionLength={50}\n                                    imageHeight={300}\n                                    showLoader={true}\n                                />\n                            </Card>\n                        }\n                        {selectedEditField === \"image\" &&\n                            <Card variant=\"elevation\" elevation={24}>\n                                <img src={input} alt={input} width=\"100%\" />\n                            </Card>\n                        }\n                    </div>\n                    <div className=\"center\" style={{ marginTop: 25 }}><b>Links</b> </div>\n\n                    <div className=\"center\" style={{ marginTop: 25, fontSize: isMobile ? \"0.5em\" : \"1em\" }}>\n                        <table style={{ width: 400 }}>\n\n                            {wallets && wallets.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Wallet</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"wallet\", \"\", key);\n                                                let index = wallets.findIndex((el) => el.key === key)\n\n                                                setWallets([\n                                                    ...wallets.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...wallets.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n\n                            {twitter && twitter.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Twitter</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"twitter\", \"\", key);\n                                                let index = twitter.findIndex((el) => el.key === key)\n\n                                                setTwitter([\n                                                    ...twitter.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...twitter.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {tumblr && tumblr.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Tumblr</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"tumblr\", \"\", key);\n                                                let index = tumblr.findIndex((el) => el.key === key)\n\n                                                setTumblr([\n                                                    ...tumblr.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...tumblr.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {github && <tr>\n                                <td >Github</td>\n                                <td>{github}</td>\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"github\", \"\");\n                                            setGithub(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>}\n                            {alias && <tr>\n                                <td >Alias</td>\n                                <td>{alias}</td>\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"alias\", \"\");\n                                            setAlias(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>}\n                            {ethereum && <tr>\n                                <td >Ethereum</td>\n                                <td>{ethereum.slice(0, 16) + \"...\" + ethereum.slice(32, 63)}</td>\n\n                                <td>\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        style={{ marginLeft: 10 }}\n                                        onClick={() => {\n                                            setModule(address, \"ethereum\", \"\");\n                                            setEthereum(\"\");\n                                        }}\n                                    >\n                                        X\n                                    </Button>\n                                </td>\n                            </tr>}\n\n                            {websites && websites.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Website</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"website\", \"\", key);\n                                                let index = websites.findIndex((el) => el.key === key)\n\n                                                setWebsites([\n                                                    ...websites.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...websites.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {images && images.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Image</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"image\", \"\", key);\n                                                let index = images.findIndex((el) => el.key === key)\n\n                                                setImages([\n                                                    ...images.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...images.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                            {dribbble && dribbble.map(({ key, value }) => (\n                                value &&\n                                <tr key={key}>\n                                    <td >Dribbble</td>\n                                    <td>{value.length > 60 ? value.slice(0, 30) + \"...\" + value.slice(value.length - 31, value.length - 1) : value}</td>\n                                    <td>\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            style={{ marginLeft: 10 }}\n                                            onClick={() => {\n                                                setModule(address, \"dribbble\", \"\", key);\n                                                let index = dribbble.findIndex((el) => el.key === key)\n\n                                                setDribbble([\n                                                    ...dribbble.slice(0, index),\n                                                    {\n                                                        value: \"\",\n                                                    },\n                                                    ...dribbble.slice(index + 1)\n                                                ]);\n\n                                            }}\n                                        >\n                                            X\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n\n                        </table>\n\n                    </div>\n\n                </div>\n            }\n        </div >\n    );\n\n};\n\nconst query_profile = `\nquery TezosProfiles($address: String!){ \n    tzprofiles_by_pk(account: $address) \n    { \n      account,\n      discord,\n      twitter,\n      github,\n      ethereum,\n      domain_name,\n      logo,\n  alias,\n      website,\n      description,\n          valid_claims,\n  \n    } \n  }\n`\n\n\nconst HashToURL = (hash, type) => {\n    // when on preview the hash might be undefined.\n    // its safe to return empty string as whatever called HashToURL is not going to be used\n    // artifactUri or displayUri\n    if (hash) {\n        switch (type) {\n            case 'HIC':\n                return hash.replace('ipfs://', 'https://pinata.hicetnunc.xyz/ipfs/')\n            case 'CLOUDFLARE':\n                return hash.replace('ipfs://', 'https://cloudflare-ipfs.com/ipfs/')\n            case 'PINATA':\n                return hash.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/')\n            case 'IPFS':\n                return hash.replace('ipfs://', 'https://ipfs.io/ipfs/')\n            case 'INFURA':\n                try {\n                    var cidv1 = new ipfsClient.CID(hash.replace('ipfs://', '')).toV1()\n                    var subdomain = cidv1.toBaseEncodedString('base32')\n                    return `https://${subdomain}.ipfs.infura-ipfs.io/`\n                } catch (err) {\n                    return undefined\n                }\n            case 'DWEB':\n                return hash.replace('ipfs://', 'http://dweb.link/ipfs/')\n            default:\n                console.error('please specify type')\n                return hash\n        }\n    }\n}","// @ts-nocheck\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\n\n//ui\nimport { Button } from \"@material-ui/core\";\n\n//logic\nimport { DAppClient } from \"@airgap/beacon-sdk\";\n//import _ from \"underscore\";\n//import { FirebaseContext } from \"./firebaseContext\";\nimport { Profile } from './components/profile';\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\n\n\nfunction App() {\n  const navigate = useNavigate();\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n  const [address, setAddress] = useState();\n\n\n\n  useEffect(() => {\n    async function getAddress() {\n      console.log(new URL(window.location.href).searchParams.get('profile'))\n      let profileAddress = new URL(window.location.href).searchParams.get('profile');\n      //setAddress(profileAddress);\n\n      if (!(profileAddress && profileAddress.includes(\".tez\"))) {\n        setAddress(profileAddress);\n      }\n      else if (profileAddress) {\n\n        await fetch('https://api.tezos.domains/graphql', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            query: `\n                {\n                  domain(name: \"` + profileAddress + `\") {\n                    name\n                    address\n                  }\n                }\n                `,\n            variables: {\n            },\n          }\n          ),\n        })\n          .then((res) => res.json())\n          .then((result) => {\n            console.log(result);\n            if (result.data.domain) {\n              setAddress(result.data.domain.address);\n            }\n          });\n      }\n    }\n    getAddress();\n  }, [setAddress]);\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n        if (!address) {\n          navigate(\"/Assemble?profile=\" + activeAccount.address);\n        }\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n      if (!address) {\n        navigate(\"/Assemble?profile=\" + activeAccount.address);\n      }\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n        navigate(\"/Assemble?profile=\" + permissions.address);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          margin: 6,\n          fontFamily: \"CaviarDreams\",\n        }}\n      >\n        <b>Profile Assemblr </b>\n      </div>\n\n      {!showUnsync &&\n        <div>\n\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            welcome sync and explore\n          </div>\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            profile search module\n          </div>\n          <div style={{ textAlign: \"center\", margin: 100 }}>\n            display random profile\n          </div>\n        </div>\n      }\n      {\n        (address || activeAccount) &&\n        <Profile\n          key={activeAccount + address}\n          address={address ? address : activeAccount.address}\n          account={activeAccount}\n        />\n      }\n\n      <div\n        className=\"top-right\"\n        style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\" }}\n      >\n        {showUnsync && (\n          <Button\n            size={\"small\"}\n            title={\"unsync\"}\n            onClick={() => {\n              unsync();\n            }}\n          >\n            <u>unsync</u>{\" \"}\n          </Button>\n        )}\n\n        {showUnsync && <div> | </div>}\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            if (!showUnsync) {\n              await sync();\n            } else {\n              navigate(\"/Assemble?profile=\" + activeAccount.address);\n              setAddress(activeAccount.address);\n            }\n          }}\n        >\n          <u>{synced}</u>{\" \"}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <FirebaseProvider>\n      <SnackbarProvider maxSnack={3}>\n        <App />\n      </SnackbarProvider>\n    </FirebaseProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}